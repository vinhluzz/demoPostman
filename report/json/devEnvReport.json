{
  "collection": {
    "_": {
      "postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b"
    },
    "item": [
      {
        "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
        "name": "Login",
        "request": {
          "url": {
            "path": [
              "api",
              "login"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "2af9b238-93d9-4d31-8d0e-61f31618c195",
              "type": "text/javascript",
              "exec": [
                "const responseSchema = {",
                "    \"type\": \"object\",",
                "    \"properties\": {",
                "        \"token\": { \"type\": \"string\" }",
                "    },",
                "    \"required\": [\"token\"]",
                "};",
                "",
                "pm.test(\"Verify status code is 200.\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Verify response body has correct schema.\", function () {",
                "    pm.response.to.have.jsonSchema(responseSchema);",
                "});",
                "",
                "pm.environment.set(\"token\", pm.response.json().token);",
                ""
              ],
              "_lastExecutionId": "83dc4f8d-e7e9-4283-bb34-d1b81fc47669"
            }
          }
        ]
      },
      {
        "id": "15832453-7fdf-4e58-bc29-e4f424e6a050",
        "name": "Create User",
        "request": {
          "url": {
            "path": [
              "api",
              "users"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{requestBody}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "238dd12e-038e-4022-8d0a-f07a89ed8b51",
              "type": "text/javascript",
              "exec": [
                "const expectedObject = JSON.parse(pm.request.body.raw);",
                "",
                "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                "});",
                "",
                "pm.test(\"Verify correct user infos is created.\", function () {",
                "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                "})",
                "",
                "pm.environment.set(\"userId\", pm.response.json().id);",
                ""
              ],
              "_lastExecutionId": "4eed4a1f-75b8-45ab-a560-2d5c92457921"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "9830320a-c77d-4aaf-874c-29e7b4ff3a08",
              "type": "text/javascript",
              "exec": [
                "let requestBody = {\r",
                "    \"name\": pm.environment.get('name'),\r",
                "    \"job\": pm.environment.get('job')\r",
                "}\r",
                "\r",
                "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
              ],
              "_lastExecutionId": "4256ad64-41d5-4a88-8f6f-231e414ac7a5"
            }
          }
        ]
      },
      {
        "id": "2b7b2c79-5a67-461b-ba8b-3ca29c804167",
        "name": "Update User",
        "request": {
          "url": {
            "path": [
              "api",
              "users",
              "{{userId}}"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{{requestBody}}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f5d3f07a-c791-4507-9cd2-c3d2657ef101",
              "type": "text/javascript",
              "exec": [
                "const expectedObject = JSON.parse(pm.request.body.raw);",
                "",
                "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                "});",
                "",
                "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                "});"
              ],
              "_lastExecutionId": "7cfcd51c-86e4-43db-bfe5-62481cefcc20"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "49140f34-b091-4eb7-b0e0-02598c2924a6",
              "type": "text/javascript",
              "exec": [
                "let requestBody = {\r",
                "    \"name\": pm.environment.get('updateName'),\r",
                "    \"job\": pm.environment.get('updateJob')\r",
                "}\r",
                "\r",
                "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
              ],
              "_lastExecutionId": "152a9279-a705-4376-937a-0c8c32039992"
            }
          }
        ]
      },
      {
        "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
        "name": "Delete User",
        "request": {
          "url": {
            "path": [
              "api",
              "users",
              "{{userId}}"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ff544f24-db6c-4a0a-beb8-4a3c024507b6",
              "type": "text/javascript",
              "exec": [
                "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                "})"
              ],
              "_lastExecutionId": "1f19e063-eaf1-4d6f-901d-f802f73e3ade"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "0e45a16b-05b0-40fc-ad0e-2c444ea5a273",
              "type": "text/javascript",
              "exec": [
                "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
              ],
              "_lastExecutionId": "a9310fb6-b423-427a-aa13-971a3ae43772"
            }
          }
        ]
      },
      {
        "id": "e1d88dff-74e0-4489-bcaf-262bd5debf84",
        "name": "Get User",
        "request": {
          "url": {
            "path": [
              "api",
              "users",
              "{{userId}}"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "df163bfa-f92e-4f36-930c-04c83c357d2f",
              "type": "text/javascript",
              "exec": [
                "let statusCode = pm.environment.get(\"statusCode\");",
                "",
                "pm.test(`Verify status code is ${statusCode}`, function () {",
                "    pm.response.to.have.status(statusCode);",
                "})"
              ],
              "_lastExecutionId": "03bf7f81-a307-4f20-af43-5c1b775f9a9a"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "fdbfa5e1-e844-43d1-9696-9637eed04f34",
              "type": "text/javascript",
              "exec": [
                "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
              ],
              "_lastExecutionId": "ef9a9daf-1ba5-45cf-b52d-07a087a79eee"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "970d0544-9dda-4b4f-9dc6-e3ef3f65d35d",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "f96dfcdc-a22e-4953-9faa-7eb3fa7d9dfb"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "ea8d82cc-76b8-49e1-8492-e7527f754f40",
          "type": "text/javascript",
          "exec": [
            "postman.setNextRequest(getNextRequest());",
            "",
            "function getNextRequest() {",
            "    let requests;",
            "    let dataset;",
            "    let nextDataset;",
            "    let nextRequest;",
            "",
            "    if(Array.isArray(pm.globals.get(\"remainingDataset\")) === true ){",
            "        dataset = pm.globals.get(\"remainingDataset\");",
            "    } else {",
            "        dataset = pm.iterationData.get(\"dataset\");",
            "        if (dataset === undefined)",
            "            pm.globals.set(\"remainingDataset\", []);",
            "    }",
            "",
            "    let remainingRequests = pm.globals.get(\"remainingRequests\");",
            "    if(Array.isArray(remainingRequests) === true ){",
            "        requests = pm.globals.get(\"remainingRequests\");",
            "    } else {",
            "        requests = pm.iterationData.get(\"requests\");    ",
            "    }",
            "",
            "    if(dataset && dataset.length > 0 && (remainingRequests === undefined || remainingRequests.length ===0)) {",
            "        nextDataset = dataset.shift();",
            "        pm.globals.set(\"remainingDataset\", dataset);",
            "        for (const [key, value] of Object.entries(nextDataset)) {",
            "            pm.environment.set(key, value);",
            "        }",
            "        requests = pm.iterationData.get(\"requests\");",
            "    }",
            "",
            "    nextRequest = requests.shift();",
            "    pm.globals.set(\"remainingRequests\", requests);",
            "",
            "    if(nextRequest === undefined && nextDataset === undefined){",
            "        pm.globals.clear(\"remainingRequests\");",
            "        pm.globals.clear(\"remainingDataset\");",
            "        return null;",
            "    }",
            "",
            "    return nextRequest;",
            "}"
          ],
          "_lastExecutionId": "b03f72a6-9eca-42ed-b560-d97063448e00"
        }
      }
    ],
    "variable": [],
    "info": {
      "_postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b",
      "name": "API Testing",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2022-08-21T14:26:49.569Z",
      "postman_exported_using": "Postman/9.29.0"
    },
    "id": "c25a37f4-8350-4d39-a02a-284582449b7d",
    "name": "Dev Environment",
    "values": [
      {
        "type": "any",
        "value": "https://reqres.in",
        "key": "baseURL"
      },
      {
        "type": "any",
        "value": "QpwL5tke4Pnpja7X4",
        "key": "token"
      },
      {
        "type": "any",
        "value": "592",
        "key": "userId"
      },
      {
        "type": "any",
        "value": "morpheus",
        "key": "name"
      },
      {
        "type": "any",
        "value": "leader",
        "key": "job"
      },
      {
        "type": "any",
        "value": 201,
        "key": "createUserStatusCode"
      },
      {
        "type": "any",
        "value": 200,
        "key": "updateUserStatusCode"
      },
      {
        "type": "any",
        "value": "{\"name\":\"morpheus2\",\"job\":\"leader2\"}",
        "key": "requestBody"
      },
      {
        "type": "any",
        "value": 404,
        "key": "statusCode"
      },
      {
        "type": "any",
        "value": "morpheus2",
        "key": "updateName"
      },
      {
        "type": "any",
        "value": "leader2",
        "key": "updateJob"
      },
      {
        "type": "any",
        "value": 204,
        "key": "deleteUserStatusCode"
      },
      {
        "type": "any",
        "value": 404,
        "key": "getUserStatusCode"
      }
    ]
  },
  "globals": {
    "id": "d9646613-3595-4f30-8987-701f622f5dd0",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 25,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 94,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 25,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 25,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 25,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 40,
        "pending": 0,
        "failed": 3
      },
      "testScripts": {
        "total": 50,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 44,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 191.84,
      "responseMin": 11,
      "responseMax": 298,
      "responseSd": 56.73283352697977,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1661099529274,
      "completed": 1661099535464
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 5,
          "cycles": 6,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d6de72a7-06af-4164-a71d-110e7d378700",
          "httpRequestId": "2cae6b44-c0f0-4b72-9bdd-e8cb5050862f"
        },
        "item": {
          "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2af9b238-93d9-4d31-8d0e-61f31618c195",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "83dc4f8d-e7e9-4283-bb34-d1b81fc47669"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4757131a-9b28-4e46-b0e5-013f48388b3a",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "7479ea84-842f-4a27-a855-b3560fec8b7f",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:09 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=5v7T0Pdh6wtnueNvdPyHIfu4pqFx1apokED4N7J6b6RCHGL9fr9D01kErgsxtL26gEoKJxzwGYRQ704h9ZDPtD%2FM%2FVKjUf6lsirIFfNP1nn56wtoWl1SCwqeLw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c35ae9a76fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 298,
          "responseSize": 29
        },
        "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0933e3c3-a9cc-44db-b02d-08e1ac57d2f2",
          "length": 5,
          "cycles": 6,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d9495392-7f90-46b2-9ae3-c8c3ee559ec9"
        },
        "item": {
          "id": "15832453-7fdf-4e58-bc29-e4f424e6a050",
          "name": "Create User",
          "request": {
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "238dd12e-038e-4022-8d0a-f07a89ed8b51",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify correct user infos is created.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "})",
                  "",
                  "pm.environment.set(\"userId\", pm.response.json().id);",
                  ""
                ],
                "_lastExecutionId": "4eed4a1f-75b8-45ab-a560-2d5c92457921"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "9830320a-c77d-4aaf-874c-29e7b4ff3a08",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('name'),\r",
                  "    \"job\": pm.environment.get('job')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                ],
                "_lastExecutionId": "4256ad64-41d5-4a88-8f6f-231e414ac7a5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "10af1095-dd12-41ff-8043-1347dfa882ab",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "36",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"morpheus1\",\"job\":\"leader1\"}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "5521409d-fb60-4693-89ee-aade98b625e7",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:09 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "86"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"56-H+nUSwjk9jtDtOZ+Vx/aJZKMctM\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=BdEJXLmh1aF4pgRpFcFqfvifZOLsaroxbsDRas6CSvp8OnN1yigyxx5QJ%2FoHK3PEXpeLjCVIzcxriXGvL7bsZ36sM%2FMbTl04fPL7SQXmS1TcslFNpjK7ZKgSkQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c35d4c946fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              109,
              111,
              114,
              112,
              104,
              101,
              117,
              115,
              49,
              34,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              34,
              108,
              101,
              97,
              100,
              101,
              114,
              49,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              56,
              56,
              54,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              48,
              57,
              46,
              57,
              53,
              50,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 198,
          "responseSize": 86
        },
        "id": "15832453-7fdf-4e58-bc29-e4f424e6a050",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "Verify correct user infos is created.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "615ebef6-7b96-442c-82c7-ed33602b699a",
          "length": 5,
          "cycles": 6,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9ab06f1f-393c-4679-a592-949978220b13"
        },
        "item": {
          "id": "15832453-7fdf-4e58-bc29-e4f424e6a050",
          "name": "Create User",
          "request": {
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "238dd12e-038e-4022-8d0a-f07a89ed8b51",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify correct user infos is created.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "})",
                  "",
                  "pm.environment.set(\"userId\", pm.response.json().id);",
                  ""
                ],
                "_lastExecutionId": "4eed4a1f-75b8-45ab-a560-2d5c92457921"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "9830320a-c77d-4aaf-874c-29e7b4ff3a08",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('name'),\r",
                  "    \"job\": pm.environment.get('job')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                ],
                "_lastExecutionId": "4256ad64-41d5-4a88-8f6f-231e414ac7a5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4ad5556f-1d21-433c-969e-372dcbf5e480",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "20",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":12,\"job\":25}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "26452223-7340-4ebe-abb6-d5f60ea080dc",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:10 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "70"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"46-jhCWBZ2IK0oNuedG+Hf5RHStOpk\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=CK9mx0zczwlrwAaxmQnGSIeP3P66RmCOmheesGqQPRmWh6CtUItqzJNCW6tmAYvKqZlKMVYbqZ%2FSVz93KnZ8sBJlTWSCOD1JhWMwdfgFp7mjP0irEs7WK%2BOK4g%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c35efeb76fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              49,
              50,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              50,
              53,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              55,
              51,
              56,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              49,
              48,
              46,
              50,
              50,
              50,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 208,
          "responseSize": 70
        },
        "id": "15832453-7fdf-4e58-bc29-e4f424e6a050",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "Verify correct user infos is created.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d1b082ce-93ba-4bbe-9d76-23904d0de81b",
          "length": 5,
          "cycles": 6,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4f7ca63d-2dfc-4519-a80c-2479661a8bec"
        },
        "item": {
          "id": "15832453-7fdf-4e58-bc29-e4f424e6a050",
          "name": "Create User",
          "request": {
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "238dd12e-038e-4022-8d0a-f07a89ed8b51",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify correct user infos is created.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "})",
                  "",
                  "pm.environment.set(\"userId\", pm.response.json().id);",
                  ""
                ],
                "_lastExecutionId": "4eed4a1f-75b8-45ab-a560-2d5c92457921"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "9830320a-c77d-4aaf-874c-29e7b4ff3a08",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('name'),\r",
                  "    \"job\": pm.environment.get('job')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                ],
                "_lastExecutionId": "4256ad64-41d5-4a88-8f6f-231e414ac7a5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4d1726f9-21da-4acb-b633-38c5c6845b65",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "24",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":null,\"job\":null}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "393ff619-4cf1-432e-8ab7-126eac31a8b8",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:10 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "74"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"4a-+1Rm88422kNIfL7VFjhZU2GIlRU\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=s55irn1dG0YgKglZyU17J72%2Fx9clgtvf18bE4CCMe5E5J3b2yr0%2Fay%2BJUuf5RBrOQiUjueCw1YLLFn3i6xQDep1tB3%2FDMs4%2B9ur2lYq2MHIlUuzwdmrUruxj5Q%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c360a92c6fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              49,
              51,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              49,
              48,
              46,
              52,
              57,
              52,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 203,
          "responseSize": 74
        },
        "id": "15832453-7fdf-4e58-bc29-e4f424e6a050",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "Verify correct user infos is created.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "44ad7f4c-8605-423c-8105-ed15feaedaab",
          "length": 5,
          "cycles": 6,
          "position": 0,
          "iteration": 1,
          "cr": true,
          "httpRequestId": "05838994-55f3-4de6-ae0a-016ede73e3b3"
        },
        "item": {
          "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2af9b238-93d9-4d31-8d0e-61f31618c195",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "83dc4f8d-e7e9-4283-bb34-d1b81fc47669"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "795a5535-8c64-4166-9863-0f429527984e",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "e70ac6c0-fb3b-4a96-ade6-932ef6afd001",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:10 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=MhIGFqty%2B8g6MMdNSh%2F2whgXpfLEZU98N%2FHMjTLEV7LkLwlmAWOn54p651pYFnymH68NvmqcHzD8W7IfhjCHvi8voKlhWRb3RAgEFJ83T9FajBmo1fMMY0CgyQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3623c166fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 193,
          "responseSize": 29
        },
        "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "644b38c3-6752-413b-8996-e0cf1ae26172",
          "length": 5,
          "cycles": 6,
          "position": 2,
          "iteration": 1,
          "httpRequestId": "b915f5dc-b453-4134-af7b-8c52a6b77e6c"
        },
        "item": {
          "id": "2b7b2c79-5a67-461b-ba8b-3ca29c804167",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f5d3f07a-c791-4507-9cd2-c3d2657ef101",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "});"
                ],
                "_lastExecutionId": "7cfcd51c-86e4-43db-bfe5-62481cefcc20"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "49140f34-b091-4eb7-b0e0-02598c2924a6",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('updateName'),\r",
                  "    \"job\": pm.environment.get('updateJob')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                ],
                "_lastExecutionId": "152a9279-a705-4376-937a-0c8c32039992"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "2"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c24362ba-f6e3-455f-b7e1-e38b60012fbb",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "36",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"morpheus1\",\"job\":\"leader1\"}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "4be5a435-af31-4271-aece-35ce95df2d57",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:11 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"4b-tdWsadsz6QQ0rlnp5eMePukryW4\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=PMj0EdcZcvSHnCF3qvYAplUs5aHXNXBSGhDgnh9sIe4%2BfkimeUoXcanRRjBF%2FIFxwT0Yl75ZJ9XhM%2ByRYAVmgvlh9xwtFPQyJ76dOQF505kr7zbazc2FwQ%2FGjw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c363eea56fe3-IAD"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              109,
              111,
              114,
              112,
              104,
              101,
              117,
              115,
              49,
              34,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              34,
              108,
              101,
              97,
              100,
              101,
              114,
              49,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              49,
              49,
              46,
              48,
              48,
              56,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 208,
          "responseSize": 75
        },
        "id": "2b7b2c79-5a67-461b-ba8b-3ca29c804167",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verify user infos is updated as expectation.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5f24f6a2-5ffd-454a-9740-b3789d4a8b14",
          "length": 5,
          "cycles": 6,
          "position": 2,
          "iteration": 1,
          "httpRequestId": "00b2e061-b25e-40b7-8514-0cdbe6a9df91"
        },
        "item": {
          "id": "2b7b2c79-5a67-461b-ba8b-3ca29c804167",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f5d3f07a-c791-4507-9cd2-c3d2657ef101",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "});"
                ],
                "_lastExecutionId": "7cfcd51c-86e4-43db-bfe5-62481cefcc20"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "49140f34-b091-4eb7-b0e0-02598c2924a6",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('updateName'),\r",
                  "    \"job\": pm.environment.get('updateJob')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                ],
                "_lastExecutionId": "152a9279-a705-4376-937a-0c8c32039992"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              ""
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "89f4738d-8e59-43a5-b6f5-c26cbf4e7a2e",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "20",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":12,\"job\":25}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c8ed2483-f8ad-411d-be92-d3b658b6148b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:11 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"3b-La/KylEl88TVFlfm0/FDGlJU0kw\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=zIGhJTloUDpwQC6v5aW9YXJnUO1a%2BOkDOf%2Ffo4GreEmdcVIbTN0t2V6Na8R3EzaPz8U%2FKZE9Nz3jn%2BZIQdfbKoB9oMeBDVGU7skp4Bm%2BaooCeS6bvZD3EPhKOg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c36588f06fe3-IAD"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              49,
              50,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              50,
              53,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              49,
              49,
              46,
              50,
              56,
              56,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 213,
          "responseSize": 59
        },
        "id": "2b7b2c79-5a67-461b-ba8b-3ca29c804167",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Verify status code is 404",
              "message": "expected response to have status code 404 but got 200",
              "stack": "AssertionError: expected response to have status code 404 but got 200\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "Verify user infos is updated as expectation.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "19821fb9-3c5e-491e-8a24-550387e28988",
          "length": 5,
          "cycles": 6,
          "position": 2,
          "iteration": 1,
          "httpRequestId": "62acfbb4-019d-4325-ad45-8ca8c05e0e06"
        },
        "item": {
          "id": "2b7b2c79-5a67-461b-ba8b-3ca29c804167",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f5d3f07a-c791-4507-9cd2-c3d2657ef101",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "});"
                ],
                "_lastExecutionId": "7cfcd51c-86e4-43db-bfe5-62481cefcc20"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "49140f34-b091-4eb7-b0e0-02598c2924a6",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('updateName'),\r",
                  "    \"job\": pm.environment.get('updateJob')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                ],
                "_lastExecutionId": "152a9279-a705-4376-937a-0c8c32039992"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "2"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "bd6523c5-4686-4016-99d0-34b2d5df18de",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "24",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":null,\"job\":null}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "aca29b71-412d-4f2a-b44a-d4095f4d4cf2",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:11 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"3f-UIoSJ8vIuLuevyVnY/4AjKlR5K8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=jGGAYOu%2BzxpxA3RGAIjPY01a8MERx%2BcSvn4kTmYq%2FRKEmul3%2BPnGKVubUD0iXS%2BKyitfyGSNkogroEIZuuROGfmfCIkd2vB1%2FsqCsqIkjgM8a0Hn5ge0XOQT1A%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3675b4e6fe3-IAD"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              49,
              49,
              46,
              53,
              54,
              54,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 205,
          "responseSize": 63
        },
        "id": "2b7b2c79-5a67-461b-ba8b-3ca29c804167",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verify user infos is updated as expectation.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8dcc392d-68da-40cc-852b-e176a4d43859",
          "length": 5,
          "cycles": 6,
          "position": 0,
          "iteration": 2,
          "cr": true,
          "httpRequestId": "ae2806d3-285e-4ba2-b73b-f76213d06aa1"
        },
        "item": {
          "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2af9b238-93d9-4d31-8d0e-61f31618c195",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "83dc4f8d-e7e9-4283-bb34-d1b81fc47669"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f778f818-06de-4d62-bf27-4a2f2977d1ca",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "89086287-b7f6-4496-8615-9fc9ba2a7349",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:11 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=nnHx9ZIU5xxrrqPjHHcNIBG2lENXwDZgdGXyqpcSdTugwzewhgG1UdivOdBospKyugpYIlIVEzTuh%2BeypcAUX6RzKNNs898K%2FZqDfGWX%2FFfoDP8FrYUE1wDhYA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c368fd436fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 192,
          "responseSize": 29
        },
        "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e64442fb-9a3f-4982-a6b8-7eb8fc1bf87d",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "30f54463-1e59-44ed-aee3-14d5440e15f9"
        },
        "item": {
          "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ff544f24-db6c-4a0a-beb8-4a3c024507b6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "1f19e063-eaf1-4d6f-901d-f802f73e3ade"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "0e45a16b-05b0-40fc-ad0e-2c444ea5a273",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "a9310fb6-b423-427a-aa13-971a3ae43772"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "2"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "db9eb57e-2dff-4a69-915a-95e4106fa0db",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6558de5d-6011-4e25-b7c4-263929c7bde3",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:12 GMT"
            },
            {
              "key": "Content-Length",
              "value": "0"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=PNOEdVlVK5r8AnfKR28%2F7omdTpss9%2FYpPCy7ChvEPLZDGhboMPq3gavF1O6bPs5JPk9cDzOELaVfOj%2Fv84ZjJD8bn0bRhy1dUYWP073FgKkCetF0ax8WaQXUBg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c36a8f6e6fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 191,
          "responseSize": 0
        },
        "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
        "assertions": [
          {
            "assertion": "Verify status code is 204",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2a77e0f0-7c84-47b5-ac68-3ccdf9173851",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "5549e023-4460-4fdc-a5a5-f1975c444bc6"
        },
        "item": {
          "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ff544f24-db6c-4a0a-beb8-4a3c024507b6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "1f19e063-eaf1-4d6f-901d-f802f73e3ade"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "0e45a16b-05b0-40fc-ad0e-2c444ea5a273",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "a9310fb6-b423-427a-aa13-971a3ae43772"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              ""
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e67d8aa5-4063-4719-ae5d-c09bccb23c84",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6ade882f-f166-4d4c-8f89-5a2566595a91",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:12 GMT"
            },
            {
              "key": "Content-Length",
              "value": "0"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=QsEX9AdM8OTPGEf92noJHHyuJS2t6ouKhZ8cXcaRbQreqTOn6fpyazdc%2Fc1zFn6u3UjVmE92%2FprL3cZ3Wq3upSM4zQ0Ct4T7TvOeENeDQ87Qu0oTrt7Wp7IL8A%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c36c094a6fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 208,
          "responseSize": 0
        },
        "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Verify status code is 404",
              "message": "expected response to have status code 404 but got 204",
              "stack": "AssertionError: expected response to have status code 404 but got 204\n   at Object.eval sandbox-script.js:1:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "15f83a97-b518-43ee-a7ea-8387008e56d0",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "ba645b79-1a7a-4f93-a95f-a713bd4cdd24"
        },
        "item": {
          "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ff544f24-db6c-4a0a-beb8-4a3c024507b6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "1f19e063-eaf1-4d6f-901d-f802f73e3ade"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "0e45a16b-05b0-40fc-ad0e-2c444ea5a273",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "a9310fb6-b423-427a-aa13-971a3ae43772"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "23"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2cd02193-eeab-4640-a9ee-1ed1ae3492f6",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "0cfb7168-8fd9-4d87-8297-529f8c40b60a",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:12 GMT"
            },
            {
              "key": "Content-Length",
              "value": "0"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=hX6SWCpdW1%2Brik1jDZUkZeFX5pM%2Bho0qlClPLy9VArlGvLiCuAfp%2FQOeemUPl9wJJgSYBJkLzER6KoNFx%2BxLdNy0SETL0tl1PW96rkVqqVXQXvXFyIKZpSIC2g%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c36d9b386fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 207,
          "responseSize": 0
        },
        "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Verify status code is 404",
              "message": "expected response to have status code 404 but got 204",
              "stack": "AssertionError: expected response to have status code 404 but got 204\n   at Object.eval sandbox-script.js:1:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "3279d9b4-93c4-4651-bab1-01393b06ec74",
          "length": 5,
          "cycles": 6,
          "position": 0,
          "iteration": 3,
          "cr": true,
          "httpRequestId": "728b403f-5ef7-445f-acce-fc81fa6de77a"
        },
        "item": {
          "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2af9b238-93d9-4d31-8d0e-61f31618c195",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "83dc4f8d-e7e9-4283-bb34-d1b81fc47669"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "dda24a63-75f8-4e16-a673-168ec3895a78",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "11ed7329-1ef3-4ff3-a5e8-0317eebbb113",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:12 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=d%2F5xZkM%2FQuaZsQ9dpsBYwqGZD0GuZEGtvc%2FjJw7mcKA5BxGcunkX7LZAIuk%2Bp%2FywpTtBPPwvHIqSMyTuRk4UIGD2EU4LaoTowst1J4dnNjL8GjLyuc9hBa9P3g%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c36f2d426fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 190,
          "responseSize": 29
        },
        "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "16d8dce0-ef01-47f3-92cc-b7a2e173a7e3",
          "length": 5,
          "cycles": 6,
          "position": 4,
          "iteration": 3,
          "httpRequestId": "7dad3894-9b6e-4ba1-b65c-225d1b130096"
        },
        "item": {
          "id": "e1d88dff-74e0-4489-bcaf-262bd5debf84",
          "name": "Get User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df163bfa-f92e-4f36-930c-04c83c357d2f",
                "type": "text/javascript",
                "exec": [
                  "let statusCode = pm.environment.get(\"statusCode\");",
                  "",
                  "pm.test(`Verify status code is ${statusCode}`, function () {",
                  "    pm.response.to.have.status(statusCode);",
                  "})"
                ],
                "_lastExecutionId": "03bf7f81-a307-4f20-af43-5c1b775f9a9a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "fdbfa5e1-e844-43d1-9696-9637eed04f34",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                ],
                "_lastExecutionId": "ef9a9daf-1ba5-45cf-b52d-07a087a79eee"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "3"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "490eaf0f-1269-4e32-95fc-9dd5924342fb",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c2530e9d-ebd5-4afb-a845-d283ead30921",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:12 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"112-EeInfgHWtnxhYRnwgZUB667e024\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=14400"
            },
            {
              "key": "CF-Cache-Status",
              "value": "HIT"
            },
            {
              "key": "Age",
              "value": "4942"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=Q%2F3UKc0dJ3WUa0Mi4XKPFPMqkK3gvg7Aj9KLgnwI%2FJGF44cMzPifk4E4ZlAlrG0uuYgI5dSZ65eQIH29f5UVul%2Fkq5nBmeQ4pYbjU%2BMcsOXXmRCUhc05IrXbPw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c370af0f6fe3-IAD"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              51,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              101,
              109,
              109,
              97,
              46,
              119,
              111,
              110,
              103,
              64,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              34,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              69,
              109,
              109,
              97,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              87,
              111,
              110,
              103,
              34,
              44,
              34,
              97,
              118,
              97,
              116,
              97,
              114,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              47,
              105,
              109,
              103,
              47,
              102,
              97,
              99,
              101,
              115,
              47,
              51,
              45,
              105,
              109,
              97,
              103,
              101,
              46,
              106,
              112,
              103,
              34,
              125,
              44,
              34,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              34,
              58,
              123,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              47,
              35,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              45,
              104,
              101,
              97,
              100,
              105,
              110,
              103,
              34,
              44,
              34,
              116,
              101,
              120,
              116,
              34,
              58,
              34,
              84,
              111,
              32,
              107,
              101,
              101,
              112,
              32,
              82,
              101,
              113,
              82,
              101,
              115,
              32,
              102,
              114,
              101,
              101,
              44,
              32,
              99,
              111,
              110,
              116,
              114,
              105,
              98,
              117,
              116,
              105,
              111,
              110,
              115,
              32,
              116,
              111,
              119,
              97,
              114,
              100,
              115,
              32,
              115,
              101,
              114,
              118,
              101,
              114,
              32,
              99,
              111,
              115,
              116,
              115,
              32,
              97,
              114,
              101,
              32,
              97,
              112,
              112,
              114,
              101,
              99,
              105,
              97,
              116,
              101,
              100,
              33,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 13,
          "responseSize": 274
        },
        "id": "e1d88dff-74e0-4489-bcaf-262bd5debf84",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3c759391-c86e-4e3e-9b2e-bb5e9025539e",
          "length": 5,
          "cycles": 6,
          "position": 4,
          "iteration": 3,
          "httpRequestId": "2021841d-cc90-424d-874d-0eab4fd60cf4"
        },
        "item": {
          "id": "e1d88dff-74e0-4489-bcaf-262bd5debf84",
          "name": "Get User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df163bfa-f92e-4f36-930c-04c83c357d2f",
                "type": "text/javascript",
                "exec": [
                  "let statusCode = pm.environment.get(\"statusCode\");",
                  "",
                  "pm.test(`Verify status code is ${statusCode}`, function () {",
                  "    pm.response.to.have.status(statusCode);",
                  "})"
                ],
                "_lastExecutionId": "03bf7f81-a307-4f20-af43-5c1b775f9a9a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "fdbfa5e1-e844-43d1-9696-9637eed04f34",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                ],
                "_lastExecutionId": "ef9a9daf-1ba5-45cf-b52d-07a087a79eee"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "23"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6ec5004c-1d8b-48cf-a5fe-71509ec8d780",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "d28e0243-23ef-411a-a683-8252744e41da",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:12 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=14400"
            },
            {
              "key": "CF-Cache-Status",
              "value": "HIT"
            },
            {
              "key": "Age",
              "value": "122"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=KXK2clweFn3Z8YEdjQho7lKlOa1S54w2HsoCdMh%2BIJIygbILfQdKX2LvaItG22MuMIyXeaCH6AAnpYoLfJroDD%2BhiGaIol7uZgcXLBCJbOnMpnEV5ZrO1CrJbw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3710f896fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              125
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 2
        },
        "id": "e1d88dff-74e0-4489-bcaf-262bd5debf84",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1da3add9-17e4-41b3-a9dc-9aa1456bb5ae",
          "length": 5,
          "cycles": 6,
          "position": 4,
          "iteration": 3,
          "httpRequestId": "d733967a-79ec-44fd-8689-eba28bdcae17"
        },
        "item": {
          "id": "e1d88dff-74e0-4489-bcaf-262bd5debf84",
          "name": "Get User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df163bfa-f92e-4f36-930c-04c83c357d2f",
                "type": "text/javascript",
                "exec": [
                  "let statusCode = pm.environment.get(\"statusCode\");",
                  "",
                  "pm.test(`Verify status code is ${statusCode}`, function () {",
                  "    pm.response.to.have.status(statusCode);",
                  "})"
                ],
                "_lastExecutionId": "03bf7f81-a307-4f20-af43-5c1b775f9a9a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "fdbfa5e1-e844-43d1-9696-9637eed04f34",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                ],
                "_lastExecutionId": "ef9a9daf-1ba5-45cf-b52d-07a087a79eee"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "null"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c2852905-4359-4bbd-adf5-e15b83f863fa",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "f761d0e0-e781-4ab2-bfed-cec6f77d86ea",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:13 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "BYPASS"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=%2Bf8FMELDE7QZl00OubaMm2VyTvzeW5DbPymsYYWoT5S1yXol%2FVbN7ViRnXdCNfYQBe7fwEchsIYJdOdNaeRKWupz7Rt8Z49X41ZvDCMytWgEeB8jia8xWkGFXA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c371681c6fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              125
            ]
          },
          "cookie": [],
          "responseTime": 212,
          "responseSize": 2
        },
        "id": "e1d88dff-74e0-4489-bcaf-262bd5debf84",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "81d8d155-e861-4ff2-94a4-1f1dd9f6447d",
          "length": 5,
          "cycles": 6,
          "position": 0,
          "iteration": 4,
          "cr": true,
          "httpRequestId": "3b95d64c-8033-4a9c-b037-614d57bb0518"
        },
        "item": {
          "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2af9b238-93d9-4d31-8d0e-61f31618c195",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "83dc4f8d-e7e9-4283-bb34-d1b81fc47669"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a66a9168-2927-4892-b223-2b990bfa3500",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "34b69c48-5a36-46ae-bcd7-134cd41bc542",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:13 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=CIqMqu0UFHPT%2Bt8VENove9UGP9vVS5LbY7gKDbbXb4DBoBRwV%2FRMQEC%2BnJRREXr2cGNu6pAaix6354M3J2FcG5MME4t2EzKkKHYjDGoid4fQlA%2F3cv3vj1b0Eg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c372ea1a6fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 207,
          "responseSize": 29
        },
        "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "745da319-8683-499a-941d-bfa108c8fe8b",
          "length": 5,
          "cycles": 6,
          "position": 1,
          "iteration": 4,
          "httpRequestId": "c289c6c3-6b82-4224-a9c6-9cd351bb95ac"
        },
        "item": {
          "id": "15832453-7fdf-4e58-bc29-e4f424e6a050",
          "name": "Create User",
          "request": {
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "238dd12e-038e-4022-8d0a-f07a89ed8b51",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify correct user infos is created.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "})",
                  "",
                  "pm.environment.set(\"userId\", pm.response.json().id);",
                  ""
                ],
                "_lastExecutionId": "4eed4a1f-75b8-45ab-a560-2d5c92457921"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "9830320a-c77d-4aaf-874c-29e7b4ff3a08",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('name'),\r",
                  "    \"job\": pm.environment.get('job')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                ],
                "_lastExecutionId": "4256ad64-41d5-4a88-8f6f-231e414ac7a5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8b89e494-78cd-4b3f-ad18-5b8039db782e",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "36",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"morpheus1\",\"job\":\"leader1\"}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c6b7c809-762f-4162-a2a0-019c2237f65e",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:13 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "85"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"55-wl2mTDL+D1GoXPrUkkkwk6M2/Fw\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=GgV4Dchq06OeB0TpdPs2ffh5c0vb%2BDC8vj2psIg636C9CQXQuCC2yQV2zbd9onlJ9U6b3VmzNcrCe1zNY6YOlul%2B4vaRBzG9JhPSXoRp0sxYAk%2F%2BOT3MAd41%2Fw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3749c2e6fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              109,
              111,
              114,
              112,
              104,
              101,
              117,
              115,
              49,
              34,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              34,
              108,
              101,
              97,
              100,
              101,
              114,
              49,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              57,
              50,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              49,
              51,
              46,
              54,
              56,
              56,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 207,
          "responseSize": 85
        },
        "id": "15832453-7fdf-4e58-bc29-e4f424e6a050",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "Verify correct user infos is created.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "6389e741-8b47-42d8-adaa-0ca58cfe1a90",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 4,
          "httpRequestId": "2541d28b-5f6c-44ae-9187-53865e70a4b2"
        },
        "item": {
          "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ff544f24-db6c-4a0a-beb8-4a3c024507b6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "1f19e063-eaf1-4d6f-901d-f802f73e3ade"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "0e45a16b-05b0-40fc-ad0e-2c444ea5a273",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "a9310fb6-b423-427a-aa13-971a3ae43772"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "92"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "72f0e4b9-adad-482f-b531-1789c933aac1",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "fc0fa659-43b8-493c-973d-8ac90ac15d75",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:13 GMT"
            },
            {
              "key": "Content-Length",
              "value": "0"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=ALs3h5p%2FAfbjViJMauqrGrjd6tF1NNqWefNVeN9N0G0usMYQp5R%2Fn5Q11ZgBgcz1FrNf6wi5aV8s5rxk0Y2dgXynchiXIMli97VPBtPGihTxsTLGyfLaDfl43A%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3762e216fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 203,
          "responseSize": 0
        },
        "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
        "assertions": [
          {
            "assertion": "Verify status code is 204",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "477d429f-c10e-4bef-a514-e5cc15dd35c3",
          "length": 5,
          "cycles": 6,
          "position": 4,
          "iteration": 4,
          "httpRequestId": "bdd6e34f-7a4e-410b-8e32-2bf2292f17e9"
        },
        "item": {
          "id": "e1d88dff-74e0-4489-bcaf-262bd5debf84",
          "name": "Get User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df163bfa-f92e-4f36-930c-04c83c357d2f",
                "type": "text/javascript",
                "exec": [
                  "let statusCode = pm.environment.get(\"statusCode\");",
                  "",
                  "pm.test(`Verify status code is ${statusCode}`, function () {",
                  "    pm.response.to.have.status(statusCode);",
                  "})"
                ],
                "_lastExecutionId": "03bf7f81-a307-4f20-af43-5c1b775f9a9a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "fdbfa5e1-e844-43d1-9696-9637eed04f34",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                ],
                "_lastExecutionId": "ef9a9daf-1ba5-45cf-b52d-07a087a79eee"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "92"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ffbe168c-c939-4a08-9e07-8d033424fb03",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6549dd24-9502-4f17-8372-a54a7c4e8569",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:14 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "BYPASS"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=CBfODOvrshmh5eEhBWoW2ygsVs%2F8TYZAk8mwfGZ8H7WLB1OReKaHEL6AMYvAJz5gSqiTm4H6OkGq%2BRm2CJKS28EKE%2Bn1wskbplaFlWby3W56oURE7YoBdAWidw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c377affd6fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              125
            ]
          },
          "cookie": [],
          "responseTime": 220,
          "responseSize": 2
        },
        "id": "e1d88dff-74e0-4489-bcaf-262bd5debf84",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "41a9a1dd-978f-48e8-9851-ce38dcb38922",
          "length": 5,
          "cycles": 6,
          "position": 0,
          "iteration": 5,
          "cr": true,
          "httpRequestId": "9d7a25a3-73c5-4195-a3f0-5ca799170e37"
        },
        "item": {
          "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2af9b238-93d9-4d31-8d0e-61f31618c195",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "83dc4f8d-e7e9-4283-bb34-d1b81fc47669"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "94c0360f-0e6a-4439-adcb-cdb24d14aa78",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "7ca5175c-f66f-48c2-b0aa-ee34621fbac6",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:14 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=%2Bqeui3Vfc%2B%2BeuDVN5W3Gg452fg7w3Kb4PZ15ek3oair%2F0nqxr1RsbKiH22%2FVSWFAocRWiawCQZuD7T0oe91CgMV1xbfZqDiFRwJRUK4s92N4YkWo3snSmczXEg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3794a226fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 205,
          "responseSize": 29
        },
        "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e3217e96-bcce-4139-967b-94b5c70381f8",
          "length": 5,
          "cycles": 6,
          "position": 1,
          "iteration": 5,
          "httpRequestId": "f598a28d-093f-4440-a2ba-cace8a694b63"
        },
        "item": {
          "id": "15832453-7fdf-4e58-bc29-e4f424e6a050",
          "name": "Create User",
          "request": {
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "238dd12e-038e-4022-8d0a-f07a89ed8b51",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify correct user infos is created.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "})",
                  "",
                  "pm.environment.set(\"userId\", pm.response.json().id);",
                  ""
                ],
                "_lastExecutionId": "4eed4a1f-75b8-45ab-a560-2d5c92457921"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "9830320a-c77d-4aaf-874c-29e7b4ff3a08",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('name'),\r",
                  "    \"job\": pm.environment.get('job')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                ],
                "_lastExecutionId": "4256ad64-41d5-4a88-8f6f-231e414ac7a5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "362de613-b3a3-4e5a-ae23-90ac987ce555",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "34",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"morpheus\",\"job\":\"leader\"}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "8ebedba8-d508-4f80-a451-020283ee67bc",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:14 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "84"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"54-qjrlFi4c5MyVsHesXGac+Aysvd8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=edl3QPW18o%2Bl%2FMa59QUIE0vII1pMeTKEQsEEOVBYMwFluEhyBQfue5ONIkYPKpXIKxclqNldqUuAevyHZyOVt3MavjFdo%2FgZizTHS6kVZzHoAT1%2FWkRWvtAHvA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c37aec9f6fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              109,
              111,
              114,
              112,
              104,
              101,
              117,
              115,
              34,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              34,
              108,
              101,
              97,
              100,
              101,
              114,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              57,
              50,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              49,
              52,
              46,
              54,
              55,
              56,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 186,
          "responseSize": 84
        },
        "id": "15832453-7fdf-4e58-bc29-e4f424e6a050",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "Verify correct user infos is created.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "896a8363-5f7c-40eb-a935-26be6f272c65",
          "length": 5,
          "cycles": 6,
          "position": 2,
          "iteration": 5,
          "httpRequestId": "cf1ea897-4967-4e50-9625-07eacaf3f48f"
        },
        "item": {
          "id": "2b7b2c79-5a67-461b-ba8b-3ca29c804167",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f5d3f07a-c791-4507-9cd2-c3d2657ef101",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "});"
                ],
                "_lastExecutionId": "7cfcd51c-86e4-43db-bfe5-62481cefcc20"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "49140f34-b091-4eb7-b0e0-02598c2924a6",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('updateName'),\r",
                  "    \"job\": pm.environment.get('updateJob')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                ],
                "_lastExecutionId": "152a9279-a705-4376-937a-0c8c32039992"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "592"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e3ba800c-f1a7-4c6c-bd56-9e386f4fabb0",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "36",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"morpheus2\",\"job\":\"leader2\"}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "65dacfc8-44f8-4ab7-902b-8900b06e5f55",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:14 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"4b-8k9Bi/nYp7X+sKxh8xlepEQxTDk\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=dauCmi6mWU3p%2BFmJH%2BcXTPCCTwrX5zwFbBJ2OfCMDVxhlNv9rme%2BpqMEBFM%2FVK1agtSQI%2BGhCB8DOJi62GM%2By01CYs%2FpTmLGuJat02l359aK8RuXjxwhFqvcBA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c37c4e426fe3-IAD"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              109,
              111,
              114,
              112,
              104,
              101,
              117,
              115,
              50,
              34,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              34,
              108,
              101,
              97,
              100,
              101,
              114,
              50,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              49,
              52,
              46,
              57,
              49,
              49,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 199,
          "responseSize": 75
        },
        "id": "2b7b2c79-5a67-461b-ba8b-3ca29c804167",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verify user infos is updated as expectation.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "26e4af7f-45be-4525-be73-29c0f01e7ba3",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 5,
          "httpRequestId": "70f782b9-f812-4e2e-a58b-62c1e24a109f"
        },
        "item": {
          "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ff544f24-db6c-4a0a-beb8-4a3c024507b6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "1f19e063-eaf1-4d6f-901d-f802f73e3ade"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "0e45a16b-05b0-40fc-ad0e-2c444ea5a273",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "a9310fb6-b423-427a-aa13-971a3ae43772"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "592"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "51a548cd-4d7f-4183-b3e0-41147f497567",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "9ca4476f-4d50-405f-bdb1-d1e2344dac3d",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:15 GMT"
            },
            {
              "key": "Content-Length",
              "value": "0"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=ino18Wbb0vLKSfQWj41Ue5Trcx0m4mUjxwTs79UnXb20REvBdrxbwrW0ELDBy2J%2FVyPPfOXV%2BHVAMwI41hbXWf9%2Fd%2BE90nrG4WfKJZkjA40vc2SZTU382yzcbg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c37dbfe16fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 214,
          "responseSize": 0
        },
        "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
        "assertions": [
          {
            "assertion": "Verify status code is 204",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5dfea21a-483e-4895-99d0-cade425cc888",
          "length": 5,
          "cycles": 6,
          "position": 4,
          "iteration": 5,
          "httpRequestId": "98d91604-8f37-4a90-becd-89c5fd1cdf6d"
        },
        "item": {
          "id": "e1d88dff-74e0-4489-bcaf-262bd5debf84",
          "name": "Get User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df163bfa-f92e-4f36-930c-04c83c357d2f",
                "type": "text/javascript",
                "exec": [
                  "let statusCode = pm.environment.get(\"statusCode\");",
                  "",
                  "pm.test(`Verify status code is ${statusCode}`, function () {",
                  "    pm.response.to.have.status(statusCode);",
                  "})"
                ],
                "_lastExecutionId": "03bf7f81-a307-4f20-af43-5c1b775f9a9a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "fdbfa5e1-e844-43d1-9696-9637eed04f34",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                ],
                "_lastExecutionId": "ef9a9daf-1ba5-45cf-b52d-07a087a79eee"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "592"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "347838f0-2b0b-40ca-b6f5-49d2f494e585",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "dfe33ee9-68af-4667-b612-b45e2369c5fd",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:15 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "BYPASS"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=lSGnqrymdFwPbgrz60hKZqT0cMXlDscj48gQOm%2ByFWOpHB96FeJs4iFit8nX2hJq9jcb6%2FG%2B9SDL0E55997DAIXVt3h6eqv1haZcIXCNotfGpEqTbmEoz50%2FtQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c37f4a116fe3-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              125
            ]
          },
          "cookie": [],
          "responseTime": 205,
          "responseSize": 2
        },
        "id": "e1d88dff-74e0-4489-bcaf-262bd5debf84",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 1127
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Verify status code is 404",
          "message": "expected response to have status code 404 but got 200",
          "stack": "AssertionError: expected response to have status code 404 but got 200\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "b375d5125924102d80d07a96cd86aefc",
          "id": "4e6ec2aa-d6ce-4de0-82b3-58bcb8fe8244",
          "timestamp": 1661099531365,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "2b7b2c79-5a67-461b-ba8b-3ca29c804167",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f5d3f07a-c791-4507-9cd2-c3d2657ef101",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "});"
                ],
                "_lastExecutionId": "7cfcd51c-86e4-43db-bfe5-62481cefcc20"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "49140f34-b091-4eb7-b0e0-02598c2924a6",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('updateName'),\r",
                  "    \"job\": pm.environment.get('updateJob')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                ],
                "_lastExecutionId": "152a9279-a705-4376-937a-0c8c32039992"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b"
          },
          "item": [
            {
              "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
              "name": "Login",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "login"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
                  "options": {
                    "raw": {
                      "language": "text"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2af9b238-93d9-4d31-8d0e-61f31618c195",
                    "type": "text/javascript",
                    "exec": [
                      "const responseSchema = {",
                      "    \"type\": \"object\",",
                      "    \"properties\": {",
                      "        \"token\": { \"type\": \"string\" }",
                      "    },",
                      "    \"required\": [\"token\"]",
                      "};",
                      "",
                      "pm.test(\"Verify status code is 200.\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Verify response body has correct schema.\", function () {",
                      "    pm.response.to.have.jsonSchema(responseSchema);",
                      "});",
                      "",
                      "pm.environment.set(\"token\", pm.response.json().token);",
                      ""
                    ],
                    "_lastExecutionId": "83dc4f8d-e7e9-4283-bb34-d1b81fc47669"
                  }
                }
              ]
            },
            {
              "id": "15832453-7fdf-4e58-bc29-e4f424e6a050",
              "name": "Create User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "238dd12e-038e-4022-8d0a-f07a89ed8b51",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify correct user infos is created.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "})",
                      "",
                      "pm.environment.set(\"userId\", pm.response.json().id);",
                      ""
                    ],
                    "_lastExecutionId": "4eed4a1f-75b8-45ab-a560-2d5c92457921"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9830320a-c77d-4aaf-874c-29e7b4ff3a08",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('name'),\r",
                      "    \"job\": pm.environment.get('job')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "4256ad64-41d5-4a88-8f6f-231e414ac7a5"
                  }
                }
              ]
            },
            {
              "id": "2b7b2c79-5a67-461b-ba8b-3ca29c804167",
              "name": "Update User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}"
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f5d3f07a-c791-4507-9cd2-c3d2657ef101",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "});"
                    ],
                    "_lastExecutionId": "7cfcd51c-86e4-43db-bfe5-62481cefcc20"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "49140f34-b091-4eb7-b0e0-02598c2924a6",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('updateName'),\r",
                      "    \"job\": pm.environment.get('updateJob')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "152a9279-a705-4376-937a-0c8c32039992"
                  }
                }
              ]
            },
            {
              "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
              "name": "Delete User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ff544f24-db6c-4a0a-beb8-4a3c024507b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "})"
                    ],
                    "_lastExecutionId": "1f19e063-eaf1-4d6f-901d-f802f73e3ade"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "0e45a16b-05b0-40fc-ad0e-2c444ea5a273",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "a9310fb6-b423-427a-aa13-971a3ae43772"
                  }
                }
              ]
            },
            {
              "id": "e1d88dff-74e0-4489-bcaf-262bd5debf84",
              "name": "Get User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df163bfa-f92e-4f36-930c-04c83c357d2f",
                    "type": "text/javascript",
                    "exec": [
                      "let statusCode = pm.environment.get(\"statusCode\");",
                      "",
                      "pm.test(`Verify status code is ${statusCode}`, function () {",
                      "    pm.response.to.have.status(statusCode);",
                      "})"
                    ],
                    "_lastExecutionId": "03bf7f81-a307-4f20-af43-5c1b775f9a9a"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdbfa5e1-e844-43d1-9696-9637eed04f34",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "ef9a9daf-1ba5-45cf-b52d-07a087a79eee"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "970d0544-9dda-4b4f-9dc6-e3ef3f65d35d",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "f96dfcdc-a22e-4953-9faa-7eb3fa7d9dfb"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ea8d82cc-76b8-49e1-8492-e7527f754f40",
                "type": "text/javascript",
                "exec": [
                  "postman.setNextRequest(getNextRequest());",
                  "",
                  "function getNextRequest() {",
                  "    let requests;",
                  "    let dataset;",
                  "    let nextDataset;",
                  "    let nextRequest;",
                  "",
                  "    if(Array.isArray(pm.globals.get(\"remainingDataset\")) === true ){",
                  "        dataset = pm.globals.get(\"remainingDataset\");",
                  "    } else {",
                  "        dataset = pm.iterationData.get(\"dataset\");",
                  "        if (dataset === undefined)",
                  "            pm.globals.set(\"remainingDataset\", []);",
                  "    }",
                  "",
                  "    let remainingRequests = pm.globals.get(\"remainingRequests\");",
                  "    if(Array.isArray(remainingRequests) === true ){",
                  "        requests = pm.globals.get(\"remainingRequests\");",
                  "    } else {",
                  "        requests = pm.iterationData.get(\"requests\");    ",
                  "    }",
                  "",
                  "    if(dataset && dataset.length > 0 && (remainingRequests === undefined || remainingRequests.length ===0)) {",
                  "        nextDataset = dataset.shift();",
                  "        pm.globals.set(\"remainingDataset\", dataset);",
                  "        for (const [key, value] of Object.entries(nextDataset)) {",
                  "            pm.environment.set(key, value);",
                  "        }",
                  "        requests = pm.iterationData.get(\"requests\");",
                  "    }",
                  "",
                  "    nextRequest = requests.shift();",
                  "    pm.globals.set(\"remainingRequests\", requests);",
                  "",
                  "    if(nextRequest === undefined && nextDataset === undefined){",
                  "        pm.globals.clear(\"remainingRequests\");",
                  "        pm.globals.clear(\"remainingDataset\");",
                  "        return null;",
                  "    }",
                  "",
                  "    return nextRequest;",
                  "}"
                ],
                "_lastExecutionId": "b03f72a6-9eca-42ed-b560-d97063448e00"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b",
            "name": "API Testing",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "5f24f6a2-5ffd-454a-9740-b3789d4a8b14",
          "length": 5,
          "cycles": 6,
          "position": 2,
          "iteration": 1,
          "httpRequestId": "00b2e061-b25e-40b7-8514-0cdbe6a9df91",
          "scriptId": "f5d3f07a-c791-4507-9cd2-c3d2657ef101",
          "execution": "8d33f763-5574-4f3e-8e48-53e248a2f720"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Verify status code is 404",
          "message": "expected response to have status code 404 but got 204",
          "stack": "AssertionError: expected response to have status code 404 but got 204\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "20c5b882ef4a771ed279e97dc16ed51a",
          "id": "5fe1c02f-2fc7-4f15-bdc2-936cf99c8269",
          "timestamp": 1661099532382,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ff544f24-db6c-4a0a-beb8-4a3c024507b6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "1f19e063-eaf1-4d6f-901d-f802f73e3ade"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "0e45a16b-05b0-40fc-ad0e-2c444ea5a273",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "a9310fb6-b423-427a-aa13-971a3ae43772"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b"
          },
          "item": [
            {
              "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
              "name": "Login",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "login"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
                  "options": {
                    "raw": {
                      "language": "text"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2af9b238-93d9-4d31-8d0e-61f31618c195",
                    "type": "text/javascript",
                    "exec": [
                      "const responseSchema = {",
                      "    \"type\": \"object\",",
                      "    \"properties\": {",
                      "        \"token\": { \"type\": \"string\" }",
                      "    },",
                      "    \"required\": [\"token\"]",
                      "};",
                      "",
                      "pm.test(\"Verify status code is 200.\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Verify response body has correct schema.\", function () {",
                      "    pm.response.to.have.jsonSchema(responseSchema);",
                      "});",
                      "",
                      "pm.environment.set(\"token\", pm.response.json().token);",
                      ""
                    ],
                    "_lastExecutionId": "83dc4f8d-e7e9-4283-bb34-d1b81fc47669"
                  }
                }
              ]
            },
            {
              "id": "15832453-7fdf-4e58-bc29-e4f424e6a050",
              "name": "Create User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "238dd12e-038e-4022-8d0a-f07a89ed8b51",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify correct user infos is created.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "})",
                      "",
                      "pm.environment.set(\"userId\", pm.response.json().id);",
                      ""
                    ],
                    "_lastExecutionId": "4eed4a1f-75b8-45ab-a560-2d5c92457921"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9830320a-c77d-4aaf-874c-29e7b4ff3a08",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('name'),\r",
                      "    \"job\": pm.environment.get('job')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "4256ad64-41d5-4a88-8f6f-231e414ac7a5"
                  }
                }
              ]
            },
            {
              "id": "2b7b2c79-5a67-461b-ba8b-3ca29c804167",
              "name": "Update User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}"
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f5d3f07a-c791-4507-9cd2-c3d2657ef101",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "});"
                    ],
                    "_lastExecutionId": "7cfcd51c-86e4-43db-bfe5-62481cefcc20"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "49140f34-b091-4eb7-b0e0-02598c2924a6",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('updateName'),\r",
                      "    \"job\": pm.environment.get('updateJob')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "152a9279-a705-4376-937a-0c8c32039992"
                  }
                }
              ]
            },
            {
              "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
              "name": "Delete User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ff544f24-db6c-4a0a-beb8-4a3c024507b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "})"
                    ],
                    "_lastExecutionId": "1f19e063-eaf1-4d6f-901d-f802f73e3ade"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "0e45a16b-05b0-40fc-ad0e-2c444ea5a273",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "a9310fb6-b423-427a-aa13-971a3ae43772"
                  }
                }
              ]
            },
            {
              "id": "e1d88dff-74e0-4489-bcaf-262bd5debf84",
              "name": "Get User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df163bfa-f92e-4f36-930c-04c83c357d2f",
                    "type": "text/javascript",
                    "exec": [
                      "let statusCode = pm.environment.get(\"statusCode\");",
                      "",
                      "pm.test(`Verify status code is ${statusCode}`, function () {",
                      "    pm.response.to.have.status(statusCode);",
                      "})"
                    ],
                    "_lastExecutionId": "03bf7f81-a307-4f20-af43-5c1b775f9a9a"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdbfa5e1-e844-43d1-9696-9637eed04f34",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "ef9a9daf-1ba5-45cf-b52d-07a087a79eee"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "970d0544-9dda-4b4f-9dc6-e3ef3f65d35d",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "f96dfcdc-a22e-4953-9faa-7eb3fa7d9dfb"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ea8d82cc-76b8-49e1-8492-e7527f754f40",
                "type": "text/javascript",
                "exec": [
                  "postman.setNextRequest(getNextRequest());",
                  "",
                  "function getNextRequest() {",
                  "    let requests;",
                  "    let dataset;",
                  "    let nextDataset;",
                  "    let nextRequest;",
                  "",
                  "    if(Array.isArray(pm.globals.get(\"remainingDataset\")) === true ){",
                  "        dataset = pm.globals.get(\"remainingDataset\");",
                  "    } else {",
                  "        dataset = pm.iterationData.get(\"dataset\");",
                  "        if (dataset === undefined)",
                  "            pm.globals.set(\"remainingDataset\", []);",
                  "    }",
                  "",
                  "    let remainingRequests = pm.globals.get(\"remainingRequests\");",
                  "    if(Array.isArray(remainingRequests) === true ){",
                  "        requests = pm.globals.get(\"remainingRequests\");",
                  "    } else {",
                  "        requests = pm.iterationData.get(\"requests\");    ",
                  "    }",
                  "",
                  "    if(dataset && dataset.length > 0 && (remainingRequests === undefined || remainingRequests.length ===0)) {",
                  "        nextDataset = dataset.shift();",
                  "        pm.globals.set(\"remainingDataset\", dataset);",
                  "        for (const [key, value] of Object.entries(nextDataset)) {",
                  "            pm.environment.set(key, value);",
                  "        }",
                  "        requests = pm.iterationData.get(\"requests\");",
                  "    }",
                  "",
                  "    nextRequest = requests.shift();",
                  "    pm.globals.set(\"remainingRequests\", requests);",
                  "",
                  "    if(nextRequest === undefined && nextDataset === undefined){",
                  "        pm.globals.clear(\"remainingRequests\");",
                  "        pm.globals.clear(\"remainingDataset\");",
                  "        return null;",
                  "    }",
                  "",
                  "    return nextRequest;",
                  "}"
                ],
                "_lastExecutionId": "b03f72a6-9eca-42ed-b560-d97063448e00"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b",
            "name": "API Testing",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "2a77e0f0-7c84-47b5-ac68-3ccdf9173851",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "5549e023-4460-4fdc-a5a5-f1975c444bc6",
          "scriptId": "ff544f24-db6c-4a0a-beb8-4a3c024507b6",
          "execution": "415eb8c7-d5a9-4769-a661-b4e01c8c6f7d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Verify status code is 404",
          "message": "expected response to have status code 404 but got 204",
          "stack": "AssertionError: expected response to have status code 404 but got 204\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "20c5b882ef4a771ed279e97dc16ed51a",
          "id": "149ab6f0-499f-47fc-a0a6-b12cb04185fb",
          "timestamp": 1661099532633,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ff544f24-db6c-4a0a-beb8-4a3c024507b6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "1f19e063-eaf1-4d6f-901d-f802f73e3ade"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "0e45a16b-05b0-40fc-ad0e-2c444ea5a273",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "a9310fb6-b423-427a-aa13-971a3ae43772"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b"
          },
          "item": [
            {
              "id": "7b9962c8-8a05-4a91-a18e-9e71ce7f915c",
              "name": "Login",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "login"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
                  "options": {
                    "raw": {
                      "language": "text"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2af9b238-93d9-4d31-8d0e-61f31618c195",
                    "type": "text/javascript",
                    "exec": [
                      "const responseSchema = {",
                      "    \"type\": \"object\",",
                      "    \"properties\": {",
                      "        \"token\": { \"type\": \"string\" }",
                      "    },",
                      "    \"required\": [\"token\"]",
                      "};",
                      "",
                      "pm.test(\"Verify status code is 200.\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Verify response body has correct schema.\", function () {",
                      "    pm.response.to.have.jsonSchema(responseSchema);",
                      "});",
                      "",
                      "pm.environment.set(\"token\", pm.response.json().token);",
                      ""
                    ],
                    "_lastExecutionId": "83dc4f8d-e7e9-4283-bb34-d1b81fc47669"
                  }
                }
              ]
            },
            {
              "id": "15832453-7fdf-4e58-bc29-e4f424e6a050",
              "name": "Create User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "238dd12e-038e-4022-8d0a-f07a89ed8b51",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify correct user infos is created.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "})",
                      "",
                      "pm.environment.set(\"userId\", pm.response.json().id);",
                      ""
                    ],
                    "_lastExecutionId": "4eed4a1f-75b8-45ab-a560-2d5c92457921"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9830320a-c77d-4aaf-874c-29e7b4ff3a08",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('name'),\r",
                      "    \"job\": pm.environment.get('job')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "4256ad64-41d5-4a88-8f6f-231e414ac7a5"
                  }
                }
              ]
            },
            {
              "id": "2b7b2c79-5a67-461b-ba8b-3ca29c804167",
              "name": "Update User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}"
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f5d3f07a-c791-4507-9cd2-c3d2657ef101",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "});"
                    ],
                    "_lastExecutionId": "7cfcd51c-86e4-43db-bfe5-62481cefcc20"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "49140f34-b091-4eb7-b0e0-02598c2924a6",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('updateName'),\r",
                      "    \"job\": pm.environment.get('updateJob')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "152a9279-a705-4376-937a-0c8c32039992"
                  }
                }
              ]
            },
            {
              "id": "1b26ecb6-234f-4a1f-beda-440f82ba00ce",
              "name": "Delete User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ff544f24-db6c-4a0a-beb8-4a3c024507b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "})"
                    ],
                    "_lastExecutionId": "1f19e063-eaf1-4d6f-901d-f802f73e3ade"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "0e45a16b-05b0-40fc-ad0e-2c444ea5a273",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "a9310fb6-b423-427a-aa13-971a3ae43772"
                  }
                }
              ]
            },
            {
              "id": "e1d88dff-74e0-4489-bcaf-262bd5debf84",
              "name": "Get User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df163bfa-f92e-4f36-930c-04c83c357d2f",
                    "type": "text/javascript",
                    "exec": [
                      "let statusCode = pm.environment.get(\"statusCode\");",
                      "",
                      "pm.test(`Verify status code is ${statusCode}`, function () {",
                      "    pm.response.to.have.status(statusCode);",
                      "})"
                    ],
                    "_lastExecutionId": "03bf7f81-a307-4f20-af43-5c1b775f9a9a"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdbfa5e1-e844-43d1-9696-9637eed04f34",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "ef9a9daf-1ba5-45cf-b52d-07a087a79eee"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "970d0544-9dda-4b4f-9dc6-e3ef3f65d35d",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "f96dfcdc-a22e-4953-9faa-7eb3fa7d9dfb"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ea8d82cc-76b8-49e1-8492-e7527f754f40",
                "type": "text/javascript",
                "exec": [
                  "postman.setNextRequest(getNextRequest());",
                  "",
                  "function getNextRequest() {",
                  "    let requests;",
                  "    let dataset;",
                  "    let nextDataset;",
                  "    let nextRequest;",
                  "",
                  "    if(Array.isArray(pm.globals.get(\"remainingDataset\")) === true ){",
                  "        dataset = pm.globals.get(\"remainingDataset\");",
                  "    } else {",
                  "        dataset = pm.iterationData.get(\"dataset\");",
                  "        if (dataset === undefined)",
                  "            pm.globals.set(\"remainingDataset\", []);",
                  "    }",
                  "",
                  "    let remainingRequests = pm.globals.get(\"remainingRequests\");",
                  "    if(Array.isArray(remainingRequests) === true ){",
                  "        requests = pm.globals.get(\"remainingRequests\");",
                  "    } else {",
                  "        requests = pm.iterationData.get(\"requests\");    ",
                  "    }",
                  "",
                  "    if(dataset && dataset.length > 0 && (remainingRequests === undefined || remainingRequests.length ===0)) {",
                  "        nextDataset = dataset.shift();",
                  "        pm.globals.set(\"remainingDataset\", dataset);",
                  "        for (const [key, value] of Object.entries(nextDataset)) {",
                  "            pm.environment.set(key, value);",
                  "        }",
                  "        requests = pm.iterationData.get(\"requests\");",
                  "    }",
                  "",
                  "    nextRequest = requests.shift();",
                  "    pm.globals.set(\"remainingRequests\", requests);",
                  "",
                  "    if(nextRequest === undefined && nextDataset === undefined){",
                  "        pm.globals.clear(\"remainingRequests\");",
                  "        pm.globals.clear(\"remainingDataset\");",
                  "        return null;",
                  "    }",
                  "",
                  "    return nextRequest;",
                  "}"
                ],
                "_lastExecutionId": "b03f72a6-9eca-42ed-b560-d97063448e00"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b",
            "name": "API Testing",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "15f83a97-b518-43ee-a7ea-8387008e56d0",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "ba645b79-1a7a-4f93-a95f-a713bd4cdd24",
          "scriptId": "ff544f24-db6c-4a0a-beb8-4a3c024507b6",
          "execution": "0eb78d37-a460-4f35-afe8-8f22086d8a73"
        }
      }
    ],
    "error": null
  }
}