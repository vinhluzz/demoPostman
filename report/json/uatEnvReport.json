{
  "collection": {
    "_": {
      "postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b"
    },
    "item": [
      {
        "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
        "name": "Login",
        "request": {
          "url": {
            "path": [
              "api",
              "login"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "df5e2643-0e77-4a30-b27d-46f9cd1cc812",
              "type": "text/javascript",
              "exec": [
                "const responseSchema = {",
                "    \"type\": \"object\",",
                "    \"properties\": {",
                "        \"token\": { \"type\": \"string\" }",
                "    },",
                "    \"required\": [\"token\"]",
                "};",
                "",
                "pm.test(\"Verify status code is 200.\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Verify response body has correct schema.\", function () {",
                "    pm.response.to.have.jsonSchema(responseSchema);",
                "});",
                "",
                "pm.environment.set(\"token\", pm.response.json().token);",
                ""
              ],
              "_lastExecutionId": "55e57a3b-914e-4c8f-b33b-8ccee707b27e"
            }
          }
        ]
      },
      {
        "id": "559150ff-9634-488e-b864-e07d5af986ed",
        "name": "Create User",
        "request": {
          "url": {
            "path": [
              "api",
              "users"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{requestBody}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ce32e8ff-35cc-4e59-b48c-ccdc83ce0b52",
              "type": "text/javascript",
              "exec": [
                "const expectedObject = JSON.parse(pm.request.body.raw);",
                "",
                "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                "});",
                "",
                "pm.test(\"Verify correct user infos is created.\", function () {",
                "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                "})",
                "",
                "pm.environment.set(\"userId\", pm.response.json().id);",
                ""
              ],
              "_lastExecutionId": "df3b9490-05b3-4316-b7d2-36310df2c3ff"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "35b3998f-9b88-49d5-813b-d6213560121b",
              "type": "text/javascript",
              "exec": [
                "let requestBody = {\r",
                "    \"name\": pm.environment.get('name'),\r",
                "    \"job\": pm.environment.get('job')\r",
                "}\r",
                "\r",
                "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
              ],
              "_lastExecutionId": "268ff74a-4e6c-4548-97c0-c32af561c4b3"
            }
          }
        ]
      },
      {
        "id": "b2a6499e-647c-4750-a372-f868459d8074",
        "name": "Update User",
        "request": {
          "url": {
            "path": [
              "api",
              "users",
              "{{userId}}"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{{requestBody}}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a27b0cb0-5845-45f6-b3b3-9fe61004015c",
              "type": "text/javascript",
              "exec": [
                "const expectedObject = JSON.parse(pm.request.body.raw);",
                "",
                "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                "});",
                "",
                "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                "});"
              ],
              "_lastExecutionId": "46fe68ee-26cf-4791-8dad-7651aed178bf"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "399db046-2b57-4314-8fae-4d31c35d073d",
              "type": "text/javascript",
              "exec": [
                "let requestBody = {\r",
                "    \"name\": pm.environment.get('updateName'),\r",
                "    \"job\": pm.environment.get('updateJob')\r",
                "}\r",
                "\r",
                "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
              ],
              "_lastExecutionId": "60143594-5eeb-4785-b6bb-9787110c3169"
            }
          }
        ]
      },
      {
        "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
        "name": "Delete User",
        "request": {
          "url": {
            "path": [
              "api",
              "users",
              "{{userId}}"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4f1dcfb9-aadb-4bc5-adff-2fdef34c915d",
              "type": "text/javascript",
              "exec": [
                "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                "})"
              ],
              "_lastExecutionId": "2c578f16-5637-49b0-b660-4791118cb009"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "556b8fb0-8fe2-416d-bb48-b8c6e6ceba59",
              "type": "text/javascript",
              "exec": [
                "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
              ],
              "_lastExecutionId": "5ec18a1a-802d-4c61-aaa7-416e82892cfb"
            }
          }
        ]
      },
      {
        "id": "ffe21e83-1d9c-42d0-8708-86335dc64a8e",
        "name": "Get User",
        "request": {
          "url": {
            "path": [
              "api",
              "users",
              "{{userId}}"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0a404abf-57d0-48a5-89d5-5eba3109deb2",
              "type": "text/javascript",
              "exec": [
                "let statusCode = pm.environment.get(\"statusCode\");",
                "",
                "pm.test(`Verify status code is ${statusCode}`, function () {",
                "    pm.response.to.have.status(statusCode);",
                "})"
              ],
              "_lastExecutionId": "27f58e83-c687-4137-a4f7-369985025ae4"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "157f8cf6-aa9c-4030-a40e-0fd842d85f72",
              "type": "text/javascript",
              "exec": [
                "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
              ],
              "_lastExecutionId": "413b43b8-7a16-4612-96b2-dc96095f18bd"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "57eca32b-6f06-4a38-be6b-500cf2cde4f4",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "b9eaec18-df50-475b-a031-3cdffe6f2efe"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "7b4a6018-5960-40b4-ac2a-97b8365f00a9",
          "type": "text/javascript",
          "exec": [
            "postman.setNextRequest(getNextRequest());",
            "",
            "function getNextRequest() {",
            "    let requests;",
            "    let dataset;",
            "    let nextDataset;",
            "    let nextRequest;",
            "",
            "    if(Array.isArray(pm.globals.get(\"remainingDataset\")) === true ){",
            "        dataset = pm.globals.get(\"remainingDataset\");",
            "    } else {",
            "        dataset = pm.iterationData.get(\"dataset\");",
            "        if (dataset === undefined)",
            "            pm.globals.set(\"remainingDataset\", []);",
            "    }",
            "",
            "    let remainingRequests = pm.globals.get(\"remainingRequests\");",
            "    if(Array.isArray(remainingRequests) === true ){",
            "        requests = pm.globals.get(\"remainingRequests\");",
            "    } else {",
            "        requests = pm.iterationData.get(\"requests\");    ",
            "    }",
            "",
            "    if(dataset && dataset.length > 0 && (remainingRequests === undefined || remainingRequests.length ===0)) {",
            "        nextDataset = dataset.shift();",
            "        pm.globals.set(\"remainingDataset\", dataset);",
            "        for (const [key, value] of Object.entries(nextDataset)) {",
            "            pm.environment.set(key, value);",
            "        }",
            "        requests = pm.iterationData.get(\"requests\");",
            "    }",
            "",
            "    nextRequest = requests.shift();",
            "    pm.globals.set(\"remainingRequests\", requests);",
            "",
            "    if(nextRequest === undefined && nextDataset === undefined){",
            "        pm.globals.clear(\"remainingRequests\");",
            "        pm.globals.clear(\"remainingDataset\");",
            "        return null;",
            "    }",
            "",
            "    return nextRequest;",
            "}"
          ],
          "_lastExecutionId": "8c55b6a7-aeb9-47a8-85a3-2944e72f26bb"
        }
      }
    ],
    "variable": [],
    "info": {
      "_postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b",
      "name": "API Testing",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2022-08-21T14:26:49.569Z",
      "postman_exported_using": "Postman/9.29.0"
    },
    "id": "c25a37f4-8350-4d39-a02a-284582449b7d",
    "name": "UAT Environment",
    "values": [
      {
        "type": "any",
        "value": "https://reqres.in",
        "key": "baseURL"
      },
      {
        "type": "any",
        "value": "QpwL5tke4Pnpja7X4",
        "key": "token"
      },
      {
        "type": "any",
        "value": "24",
        "key": "userId"
      },
      {
        "type": "any",
        "value": "morpheus",
        "key": "name"
      },
      {
        "type": "any",
        "value": "leader",
        "key": "job"
      },
      {
        "type": "any",
        "value": 201,
        "key": "createUserStatusCode"
      },
      {
        "type": "any",
        "value": 200,
        "key": "updateUserStatusCode"
      },
      {
        "type": "any",
        "value": "{\"name\":\"morpheus2\",\"job\":\"leader2\"}",
        "key": "requestBody"
      },
      {
        "type": "any",
        "value": 404,
        "key": "statusCode"
      },
      {
        "type": "any",
        "value": "morpheus2",
        "key": "updateName"
      },
      {
        "type": "any",
        "value": "leader2",
        "key": "updateJob"
      },
      {
        "type": "any",
        "value": 204,
        "key": "deleteUserStatusCode"
      },
      {
        "type": "any",
        "value": 404,
        "key": "getUserStatusCode"
      }
    ]
  },
  "globals": {
    "id": "15b9617f-2368-4f77-8908-3e2cb879bb1d",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 25,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 94,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 25,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 25,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 25,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 40,
        "pending": 0,
        "failed": 3
      },
      "testScripts": {
        "total": 50,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 44,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 203.92,
      "responseMin": 15,
      "responseMax": 326,
      "responseSd": 62.22920214818763,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1661099546395,
      "completed": 1661099553109
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 5,
          "cycles": 6,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e263b33d-f67d-4b7a-b46d-d58d43d83dbc",
          "httpRequestId": "24726d54-af21-401f-ab0d-43858cbef731"
        },
        "item": {
          "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df5e2643-0e77-4a30-b27d-46f9cd1cc812",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "55e57a3b-914e-4c8f-b33b-8ccee707b27e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "75888cca-4fe2-4f1b-ae4d-5b70f97e003a",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "6ae6059e-894b-49b2-9f9c-43b014fe405c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:26 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=7hcToNZmH%2BgmlwfKEIGusN3GJBpSgaGkaXzVEjA4pt77OVCNd167TGByXsYQdrKo1WSlFt1entiDttSK893RMTQ4OKyvtA6Dbft2gY3ryNKFBkSMomygEWHUAA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3c5da0f9c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 326,
          "responseSize": 29
        },
        "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0e1580ac-0d73-43e9-9810-5a64b030f27e",
          "length": 5,
          "cycles": 6,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "76adccf2-819c-4220-bf9e-290efb388d8b"
        },
        "item": {
          "id": "559150ff-9634-488e-b864-e07d5af986ed",
          "name": "Create User",
          "request": {
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ce32e8ff-35cc-4e59-b48c-ccdc83ce0b52",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify correct user infos is created.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "})",
                  "",
                  "pm.environment.set(\"userId\", pm.response.json().id);",
                  ""
                ],
                "_lastExecutionId": "df3b9490-05b3-4316-b7d2-36310df2c3ff"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "35b3998f-9b88-49d5-813b-d6213560121b",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('name'),\r",
                  "    \"job\": pm.environment.get('job')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                ],
                "_lastExecutionId": "268ff74a-4e6c-4548-97c0-c32af561c4b3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c515832f-a679-4447-a860-33cacd601323",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "36",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"morpheus1\",\"job\":\"leader1\"}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "43fc2e7a-49ed-42b5-a99b-0217b3e80fe1",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:27 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "86"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"56-AU0zosAHDvgODwDDKdVHQV6dmrs\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=tvyeLXwFsobtXWnnRYGy0yDVz13KHQHUUE53DGc5wxd5N7KoLegdvh7qFJ3VtMMWXq43uVmk2f9%2FHHoayFMPUyUlzFCxCeZzWdxwqgMM9Ao%2BcNGQp%2B4Ajs371w%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3c86def9c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              109,
              111,
              114,
              112,
              104,
              101,
              117,
              115,
              49,
              34,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              34,
              108,
              101,
              97,
              100,
              101,
              114,
              49,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              51,
              54,
              56,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              50,
              55,
              46,
              48,
              57,
              56,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 209,
          "responseSize": 86
        },
        "id": "559150ff-9634-488e-b864-e07d5af986ed",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "Verify correct user infos is created.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "745510e0-8764-4816-bad4-0218169cf618",
          "length": 5,
          "cycles": 6,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "28d64755-a1e3-4e3a-964e-2d17f6efee2c"
        },
        "item": {
          "id": "559150ff-9634-488e-b864-e07d5af986ed",
          "name": "Create User",
          "request": {
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ce32e8ff-35cc-4e59-b48c-ccdc83ce0b52",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify correct user infos is created.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "})",
                  "",
                  "pm.environment.set(\"userId\", pm.response.json().id);",
                  ""
                ],
                "_lastExecutionId": "df3b9490-05b3-4316-b7d2-36310df2c3ff"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "35b3998f-9b88-49d5-813b-d6213560121b",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('name'),\r",
                  "    \"job\": pm.environment.get('job')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                ],
                "_lastExecutionId": "268ff74a-4e6c-4548-97c0-c32af561c4b3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5245c4cd-9f71-47d9-b137-c16c085ddac6",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "20",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":12,\"job\":25}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "54ee278a-29df-4d73-a033-9415b227d4b2",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:27 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "70"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"46-L5gTM2o7tco7yoGAZ2nE9nGvsu0\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=hWK2WA10BbBq2sLy6icvsRB%2Bb7lmH%2Bp9uSS0OGi55DFnbcThoxv5Lvcuq10k9IW4uTqmPdC7D%2Fy5lV2ARHoYZshdMasu7Szf0UlXVvqfBaWE8PiSEn0BROPbXA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3ca28889c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              49,
              50,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              50,
              53,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              53,
              48,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              50,
              55,
              46,
              51,
              55,
              51,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 205,
          "responseSize": 70
        },
        "id": "559150ff-9634-488e-b864-e07d5af986ed",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "Verify correct user infos is created.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9bcb9f94-73ca-41b1-8217-2a525a10dc0c",
          "length": 5,
          "cycles": 6,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5c9a4917-73a2-4bd9-b640-26ba9d9528ed"
        },
        "item": {
          "id": "559150ff-9634-488e-b864-e07d5af986ed",
          "name": "Create User",
          "request": {
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ce32e8ff-35cc-4e59-b48c-ccdc83ce0b52",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify correct user infos is created.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "})",
                  "",
                  "pm.environment.set(\"userId\", pm.response.json().id);",
                  ""
                ],
                "_lastExecutionId": "df3b9490-05b3-4316-b7d2-36310df2c3ff"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "35b3998f-9b88-49d5-813b-d6213560121b",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('name'),\r",
                  "    \"job\": pm.environment.get('job')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                ],
                "_lastExecutionId": "268ff74a-4e6c-4548-97c0-c32af561c4b3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a2eabffc-7ca2-4dc5-8e04-764aa02ed114",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "24",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":null,\"job\":null}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6c2c22b7-f01c-46c2-b630-f3a1a2b4eda9",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:27 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "74"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"4a-DnVl6kQQ5Y8F4M+fNProqcu51FE\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=LYu3d3TOYTPFSztW8VJdrA3AEF6psilCRVaO0tmM8ftMjBVr54QvuY63kiZ7ej2JjD2N%2FwdEICxghW6wdWZJVbPXOAwre0h239mj1L74MwdXDdgZPdFKo9vf1Q%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3cbcb039c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              54,
              54,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              50,
              55,
              46,
              54,
              50,
              57,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 203,
          "responseSize": 74
        },
        "id": "559150ff-9634-488e-b864-e07d5af986ed",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "Verify correct user infos is created.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "01ee28c3-2c34-490f-851e-ce709a885bfe",
          "length": 5,
          "cycles": 6,
          "position": 0,
          "iteration": 1,
          "cr": true,
          "httpRequestId": "8909117e-f38d-48e7-bfa0-b163e4e13b45"
        },
        "item": {
          "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df5e2643-0e77-4a30-b27d-46f9cd1cc812",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "55e57a3b-914e-4c8f-b33b-8ccee707b27e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fa277878-897a-437f-b8d7-10ecdb280046",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "73417880-329d-4ca9-b45f-081442cbeadb",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:27 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=HXVoiagPUAQ5qz350FIE2B2ZleUQ0XtiQL4ab%2B884U5hLpPVOdeuiIiXgWUq1IXDd94BlpAYN9SKK9uHZZc3ez2c4zxdT%2F6E4ukhvso2%2BDwXyt3Ev9%2BFkU3NNw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3cd5d909c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 192,
          "responseSize": 29
        },
        "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "abf01876-8390-4c52-9767-648570e2deb3",
          "length": 5,
          "cycles": 6,
          "position": 2,
          "iteration": 1,
          "httpRequestId": "908df023-bf17-4e55-9e33-dc7f6bb724bd"
        },
        "item": {
          "id": "b2a6499e-647c-4750-a372-f868459d8074",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a27b0cb0-5845-45f6-b3b3-9fe61004015c",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "});"
                ],
                "_lastExecutionId": "46fe68ee-26cf-4791-8dad-7651aed178bf"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "399db046-2b57-4314-8fae-4d31c35d073d",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('updateName'),\r",
                  "    \"job\": pm.environment.get('updateJob')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                ],
                "_lastExecutionId": "60143594-5eeb-4785-b6bb-9787110c3169"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "2"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9742927c-f2db-4fda-a760-d8805dbf91a7",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "36",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"morpheus1\",\"job\":\"leader1\"}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "079a1cd6-dcac-4f88-aea6-4a068b76e3ce",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:28 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"4b-VqYzR4OzaV/vVWJQIzuwSnnJoQg\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=Xof3jEKs8qMv15SNke6gLKtKzDR0k9isZ9tTbwzI9jo2XEJyYB9VGVJkTRJ2WIg4Sz1JSFGYnbfg8TOnOw42vxZmwAht7uPbONurKqJfCM1nsAmvZ%2F28UGV7YQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3cf08099c40-IAD"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              109,
              111,
              114,
              112,
              104,
              101,
              117,
              115,
              49,
              34,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              34,
              108,
              101,
              97,
              100,
              101,
              114,
              49,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              50,
              56,
              46,
              49,
              52,
              56,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 212,
          "responseSize": 75
        },
        "id": "b2a6499e-647c-4750-a372-f868459d8074",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verify user infos is updated as expectation.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "638304de-f511-482d-98ea-508136392d44",
          "length": 5,
          "cycles": 6,
          "position": 2,
          "iteration": 1,
          "httpRequestId": "120ca436-0f7c-4fb0-9db8-62ebcaa4fb38"
        },
        "item": {
          "id": "b2a6499e-647c-4750-a372-f868459d8074",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a27b0cb0-5845-45f6-b3b3-9fe61004015c",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "});"
                ],
                "_lastExecutionId": "46fe68ee-26cf-4791-8dad-7651aed178bf"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "399db046-2b57-4314-8fae-4d31c35d073d",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('updateName'),\r",
                  "    \"job\": pm.environment.get('updateJob')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                ],
                "_lastExecutionId": "60143594-5eeb-4785-b6bb-9787110c3169"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              ""
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3c2ec5c7-03bd-4a47-9323-08ff05b5e12a",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "20",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":12,\"job\":25}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "ddbaa26a-9cb3-4ae5-86e9-022d56e640c7",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:28 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"3b-ItJ8FZGgUn2tAwTI3hJAp4vfB+4\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=A%2B1vOKzl6pwWK2Osa0Ez1%2FVCVMJkpO9ShbCcFLoNsViycV%2BNvlrrO65bgzNh%2BqaMfX0pzw6llQM2oyvbseh2Q981EqWjvfZAiLu3hXBbiP5zI%2F3I8ePEPio0gA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3d0ba8f9c40-IAD"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              49,
              50,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              50,
              53,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              50,
              56,
              46,
              52,
              51,
              55,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 271,
          "responseSize": 59
        },
        "id": "b2a6499e-647c-4750-a372-f868459d8074",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Verify status code is 404",
              "message": "expected response to have status code 404 but got 200",
              "stack": "AssertionError: expected response to have status code 404 but got 200\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "Verify user infos is updated as expectation.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a62f25e6-a4c7-4ea2-9103-6f8b43c22e5e",
          "length": 5,
          "cycles": 6,
          "position": 2,
          "iteration": 1,
          "httpRequestId": "de3928df-cec7-4923-b1a9-0cdc8170d60a"
        },
        "item": {
          "id": "b2a6499e-647c-4750-a372-f868459d8074",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a27b0cb0-5845-45f6-b3b3-9fe61004015c",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "});"
                ],
                "_lastExecutionId": "46fe68ee-26cf-4791-8dad-7651aed178bf"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "399db046-2b57-4314-8fae-4d31c35d073d",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('updateName'),\r",
                  "    \"job\": pm.environment.get('updateJob')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                ],
                "_lastExecutionId": "60143594-5eeb-4785-b6bb-9787110c3169"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "2"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "baddfdb1-df10-4db5-a4d1-b2843d13f07a",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "24",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":null,\"job\":null}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "510d6b0d-889b-45da-82f3-3f0730a3b86b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:28 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"3f-OlBjnTjjsTNod75phOn16M0ZKIs\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=yVG7ENlGx7jou8%2By4dm8wj3Ps%2Fo1RGiiueDBcNuOR4NF4E4lRaKfPjKccxqeoWEs1NmI2UEvUMeUX6TC1FeyKAr797Mu8lwG%2BMw2raFwn0lVgf811D3lFZCDcg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3d34e919c40-IAD"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              50,
              56,
              46,
              56,
              51,
              49,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 206,
          "responseSize": 63
        },
        "id": "b2a6499e-647c-4750-a372-f868459d8074",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verify user infos is updated as expectation.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "77d9da67-43b1-4967-b7d2-70b77275b9c1",
          "length": 5,
          "cycles": 6,
          "position": 0,
          "iteration": 2,
          "cr": true,
          "httpRequestId": "943a8210-b9d2-45f5-8529-86d16af63eec"
        },
        "item": {
          "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df5e2643-0e77-4a30-b27d-46f9cd1cc812",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "55e57a3b-914e-4c8f-b33b-8ccee707b27e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5d9a338a-c8c7-4ded-af9f-4d5f43109daa",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "36ae8df4-1657-4ca5-bea4-6d37a97da56c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:29 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=nKzfQbSF4Kj7LVI1VltEKod%2BHaBl%2B3uEnG4zIWHZqY8JPDB9ocOY%2BBu9yYemcM%2FmxeZnyw81vn%2FMCnZof6lfiFTktMDlKPvENNW7CxKoQxHJJS1b8%2F3LV6qJDQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3d4d9219c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 209,
          "responseSize": 29
        },
        "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "937bb7f6-a959-4eed-9b1e-62f0dc55ecbe",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "e492bb49-92ce-4716-94b8-8d693b95dce3"
        },
        "item": {
          "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4f1dcfb9-aadb-4bc5-adff-2fdef34c915d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "2c578f16-5637-49b0-b660-4791118cb009"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "556b8fb0-8fe2-416d-bb48-b8c6e6ceba59",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "5ec18a1a-802d-4c61-aaa7-416e82892cfb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "2"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0bf169d8-6ff1-401e-99cd-4ccd081a7f89",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "67583845-67f7-45bc-aa89-20822a6d9236",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:29 GMT"
            },
            {
              "key": "Content-Length",
              "value": "0"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=sm7nQdiJmi7XiYqqQyrzBfOvsgGCuRpr4vmz%2FvOUuPar9oPJKlWO43G%2BNBPlNWuW3123NyKzr5zgAaWvkHuz9Wf6bGkFWugA50gjp9IRzCTG%2F%2F%2Bh5S2%2BzAJaHQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3d68bef9c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 210,
          "responseSize": 0
        },
        "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
        "assertions": [
          {
            "assertion": "Verify status code is 204",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "32d21038-2018-4a22-b396-adaed568d661",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "6432229d-82a6-4779-be1b-9cd9b5d45d10"
        },
        "item": {
          "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4f1dcfb9-aadb-4bc5-adff-2fdef34c915d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "2c578f16-5637-49b0-b660-4791118cb009"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "556b8fb0-8fe2-416d-bb48-b8c6e6ceba59",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "5ec18a1a-802d-4c61-aaa7-416e82892cfb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              ""
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "40445db3-adcf-4fee-a00c-590b688f94fd",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "064ca1cf-ee8f-469e-9de8-3c520db82a09",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:29 GMT"
            },
            {
              "key": "Content-Length",
              "value": "0"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=MdJjFjlSOAQowzu3glY%2BK38kponCAj6u9ucagpatzD62u7lqvLk4RAHKxu4wXSA2knWNLXsB4a3PJ1Cod5%2BGB7cAlMwPuJGycUyymGVmBTJ369X%2BkbZ4TLs61g%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3d82eca9c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 207,
          "responseSize": 0
        },
        "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Verify status code is 404",
              "message": "expected response to have status code 404 but got 204",
              "stack": "AssertionError: expected response to have status code 404 but got 204\n   at Object.eval sandbox-script.js:1:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "f7b025f5-0ebc-4f91-a360-7146106107ee",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "18732849-8959-44ef-987e-ecf5fbeed24d"
        },
        "item": {
          "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4f1dcfb9-aadb-4bc5-adff-2fdef34c915d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "2c578f16-5637-49b0-b660-4791118cb009"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "556b8fb0-8fe2-416d-bb48-b8c6e6ceba59",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "5ec18a1a-802d-4c61-aaa7-416e82892cfb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "23"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0a3d9071-1e82-4e9a-acd9-bb7c71ee18f0",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "39ac89a4-5f58-42e5-9aec-18efced22433",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:30 GMT"
            },
            {
              "key": "Content-Length",
              "value": "0"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=Ls15dy22HcP77IvigKBYES873NH9M5uWNQWEEeBp0qXH8p5ryuk%2FG%2F%2BVQxdnJNcUQj82eV6ifxJq5BjvOLYWec291OT9b0p7Jzlal90f94BeDQnby4WfnA9avg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3da7a7f9c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 205,
          "responseSize": 0
        },
        "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Verify status code is 404",
              "message": "expected response to have status code 404 but got 204",
              "stack": "AssertionError: expected response to have status code 404 but got 204\n   at Object.eval sandbox-script.js:1:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "c9897e99-9015-4c40-94c1-7994d20a1b73",
          "length": 5,
          "cycles": 6,
          "position": 0,
          "iteration": 3,
          "cr": true,
          "httpRequestId": "0b314f3f-b63b-4cf7-8010-3dec750af80a"
        },
        "item": {
          "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df5e2643-0e77-4a30-b27d-46f9cd1cc812",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "55e57a3b-914e-4c8f-b33b-8ccee707b27e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5b3ff663-c5de-4796-ae0c-122b37a914b5",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "58fd9c64-91e9-46c8-a415-2e07b419019e",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:30 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=%2FLUuzJC8XLHQVLlxHlxrgrOQBfjVh0hWBN02ddzsWEXsIdzmFXXdUm75XKv9AZKUwnrpXw8tw%2BN%2FUwU%2F%2FA0Z1Jvf1Y9X6Qejdfwxo2wasUcoaA2YzCsRuw5BZQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3dbfcad9c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 209,
          "responseSize": 29
        },
        "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d2e73869-688d-4ec0-a9aa-ea2f8bcf49bb",
          "length": 5,
          "cycles": 6,
          "position": 4,
          "iteration": 3,
          "httpRequestId": "60ef912a-00a6-40e2-a9c2-ec47fe0ac6fa"
        },
        "item": {
          "id": "ffe21e83-1d9c-42d0-8708-86335dc64a8e",
          "name": "Get User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a404abf-57d0-48a5-89d5-5eba3109deb2",
                "type": "text/javascript",
                "exec": [
                  "let statusCode = pm.environment.get(\"statusCode\");",
                  "",
                  "pm.test(`Verify status code is ${statusCode}`, function () {",
                  "    pm.response.to.have.status(statusCode);",
                  "})"
                ],
                "_lastExecutionId": "27f58e83-c687-4137-a4f7-369985025ae4"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "157f8cf6-aa9c-4030-a40e-0fd842d85f72",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                ],
                "_lastExecutionId": "413b43b8-7a16-4612-96b2-dc96095f18bd"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "3"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2ab06927-33ee-46c4-8477-fdda0288881b",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "93314ba9-7e03-4d1f-a1cf-b676d6d2f08d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:30 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"112-EeInfgHWtnxhYRnwgZUB667e024\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=14400"
            },
            {
              "key": "CF-Cache-Status",
              "value": "HIT"
            },
            {
              "key": "Age",
              "value": "4960"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=iONhQi8A%2Bt7WzAv8sAF09vqF1BayUhJig8CLwyMaGbElrMV5047ArBwWQevj%2B%2Ff9jxOqQm5NYD6cdDjLzit%2B0ZyxNh9tyzurUP2yFMBXlOGbGVF6EWC8Ci0Tnw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3dd9f879c40-IAD"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              51,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              101,
              109,
              109,
              97,
              46,
              119,
              111,
              110,
              103,
              64,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              34,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              69,
              109,
              109,
              97,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              87,
              111,
              110,
              103,
              34,
              44,
              34,
              97,
              118,
              97,
              116,
              97,
              114,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              47,
              105,
              109,
              103,
              47,
              102,
              97,
              99,
              101,
              115,
              47,
              51,
              45,
              105,
              109,
              97,
              103,
              101,
              46,
              106,
              112,
              103,
              34,
              125,
              44,
              34,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              34,
              58,
              123,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              47,
              35,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              45,
              104,
              101,
              97,
              100,
              105,
              110,
              103,
              34,
              44,
              34,
              116,
              101,
              120,
              116,
              34,
              58,
              34,
              84,
              111,
              32,
              107,
              101,
              101,
              112,
              32,
              82,
              101,
              113,
              82,
              101,
              115,
              32,
              102,
              114,
              101,
              101,
              44,
              32,
              99,
              111,
              110,
              116,
              114,
              105,
              98,
              117,
              116,
              105,
              111,
              110,
              115,
              32,
              116,
              111,
              119,
              97,
              114,
              100,
              115,
              32,
              115,
              101,
              114,
              118,
              101,
              114,
              32,
              99,
              111,
              115,
              116,
              115,
              32,
              97,
              114,
              101,
              32,
              97,
              112,
              112,
              114,
              101,
              99,
              105,
              97,
              116,
              101,
              100,
              33,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 22,
          "responseSize": 274
        },
        "id": "ffe21e83-1d9c-42d0-8708-86335dc64a8e",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "56d3d39b-40c3-4658-ba2c-0556f58713e4",
          "length": 5,
          "cycles": 6,
          "position": 4,
          "iteration": 3,
          "httpRequestId": "44af36ae-f7e6-41ff-86d0-947b9d47cf18"
        },
        "item": {
          "id": "ffe21e83-1d9c-42d0-8708-86335dc64a8e",
          "name": "Get User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a404abf-57d0-48a5-89d5-5eba3109deb2",
                "type": "text/javascript",
                "exec": [
                  "let statusCode = pm.environment.get(\"statusCode\");",
                  "",
                  "pm.test(`Verify status code is ${statusCode}`, function () {",
                  "    pm.response.to.have.status(statusCode);",
                  "})"
                ],
                "_lastExecutionId": "27f58e83-c687-4137-a4f7-369985025ae4"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "157f8cf6-aa9c-4030-a40e-0fd842d85f72",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                ],
                "_lastExecutionId": "413b43b8-7a16-4612-96b2-dc96095f18bd"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "23"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "720fffd1-9f7f-4260-8399-65e8f3118569",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7a71bd38-6558-4535-adc5-251e15117b80",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:30 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=14400"
            },
            {
              "key": "CF-Cache-Status",
              "value": "HIT"
            },
            {
              "key": "Age",
              "value": "140"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=qrEpuCu2ap3BIPaeOZRGbgnyj3ApufBotljvZQ2AGCY89V%2FtGnlJOfKLyDyHQiGOBl1ecC7z5LpcGekh1bMriJ9fFOLDdXAK6K3ZHHuKCgGTIabbLu5BpfzCUw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3de18579c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              125
            ]
          },
          "cookie": [],
          "responseTime": 15,
          "responseSize": 2
        },
        "id": "ffe21e83-1d9c-42d0-8708-86335dc64a8e",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1d92194a-847a-4a68-a5bb-7032bce47ab9",
          "length": 5,
          "cycles": 6,
          "position": 4,
          "iteration": 3,
          "httpRequestId": "c23abdd2-c555-42a9-8400-942e8afaf1b3"
        },
        "item": {
          "id": "ffe21e83-1d9c-42d0-8708-86335dc64a8e",
          "name": "Get User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a404abf-57d0-48a5-89d5-5eba3109deb2",
                "type": "text/javascript",
                "exec": [
                  "let statusCode = pm.environment.get(\"statusCode\");",
                  "",
                  "pm.test(`Verify status code is ${statusCode}`, function () {",
                  "    pm.response.to.have.status(statusCode);",
                  "})"
                ],
                "_lastExecutionId": "27f58e83-c687-4137-a4f7-369985025ae4"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "157f8cf6-aa9c-4030-a40e-0fd842d85f72",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                ],
                "_lastExecutionId": "413b43b8-7a16-4612-96b2-dc96095f18bd"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "null"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "18f5c6b9-c6df-413f-aee6-690bf63ac8dd",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "42375d18-8c3f-4a37-bd55-5561fbadd9c8",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:30 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "BYPASS"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=MdmAFlmI2EWEcyMgHovIXFYpgI%2BHyLOCTxzMBBp6yjMBbXRTTNcxaP3zVILqiqw%2FGbKumIQt%2BXJPfKnk0DKEqg7kTVaPt7IW94WDxt%2BIGE9UYiNXnJmpm8weXA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3dea9429c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              125
            ]
          },
          "cookie": [],
          "responseTime": 213,
          "responseSize": 2
        },
        "id": "ffe21e83-1d9c-42d0-8708-86335dc64a8e",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9391c824-e0ab-459c-a5a8-3816bae00cec",
          "length": 5,
          "cycles": 6,
          "position": 0,
          "iteration": 4,
          "cr": true,
          "httpRequestId": "9a5e1688-0288-4ef5-8106-1f9470fb30f9"
        },
        "item": {
          "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df5e2643-0e77-4a30-b27d-46f9cd1cc812",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "55e57a3b-914e-4c8f-b33b-8ccee707b27e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f645f8ee-73cc-4194-95bd-d5f5027bb1e4",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "d75c7b6e-ddd9-4adb-9e50-3745e071efd8",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:30 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=BUEj%2BCOq5mry%2BR7AQ%2BpHghEOOvN426UHCFf%2FYfrUOLxQlhFWPwMYeSk6YwvBWTUA4gKkBfsT5ImLIZ%2BDSWzKUkqyQrXlj0Jvt1iTqjmQbGpLubMPizkpwCDuHA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3e02bf09c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 215,
          "responseSize": 29
        },
        "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "091a8649-89b5-48e5-a932-57523d6aacaf",
          "length": 5,
          "cycles": 6,
          "position": 1,
          "iteration": 4,
          "httpRequestId": "45d8dfcc-b1ae-4165-a2aa-f8a4f2263d4f"
        },
        "item": {
          "id": "559150ff-9634-488e-b864-e07d5af986ed",
          "name": "Create User",
          "request": {
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ce32e8ff-35cc-4e59-b48c-ccdc83ce0b52",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify correct user infos is created.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "})",
                  "",
                  "pm.environment.set(\"userId\", pm.response.json().id);",
                  ""
                ],
                "_lastExecutionId": "df3b9490-05b3-4316-b7d2-36310df2c3ff"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "35b3998f-9b88-49d5-813b-d6213560121b",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('name'),\r",
                  "    \"job\": pm.environment.get('job')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                ],
                "_lastExecutionId": "268ff74a-4e6c-4548-97c0-c32af561c4b3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7904bb53-8c65-410e-be19-e7f67e4f8a37",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "36",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"morpheus1\",\"job\":\"leader1\"}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "8ecb5ac8-567c-4de6-bc79-0f65c1c4ff09",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:31 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "86"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"56-1Vtu5tiHbdIjObBHpnohzSDvELQ\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=Y1xz%2B3t4NYYlD04F5MR1xKdsuwjmSvD9nAhrMgHSd%2BQ9tLT%2FPgY6%2FxTVy7eWsKFzk%2By6c3T7%2FosjpEufU2uxT5yicRT4reG7E4ekTALvA63PTzJNa0gU%2FFPw%2FQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3e1ef1a9c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              109,
              111,
              114,
              112,
              104,
              101,
              117,
              115,
              49,
              34,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              34,
              108,
              101,
              97,
              100,
              101,
              114,
              49,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              52,
              51,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              51,
              49,
              46,
              49,
              55,
              57,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 219,
          "responseSize": 86
        },
        "id": "559150ff-9634-488e-b864-e07d5af986ed",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "Verify correct user infos is created.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "576d0e11-6ba2-4bbc-8c67-7b650bef3a03",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 4,
          "httpRequestId": "7f2c4e31-7e1a-4c78-9050-e894e5cc70dc"
        },
        "item": {
          "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4f1dcfb9-aadb-4bc5-adff-2fdef34c915d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "2c578f16-5637-49b0-b660-4791118cb009"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "556b8fb0-8fe2-416d-bb48-b8c6e6ceba59",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "5ec18a1a-802d-4c61-aaa7-416e82892cfb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "143"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b6913705-962d-4625-b066-1fea7bc76e9c",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "20e92d40-c372-447a-8d02-a65b8619974c",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:31 GMT"
            },
            {
              "key": "Content-Length",
              "value": "0"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=SxJUeMJu%2BSBUi2XDSqOhVX4XzMGa%2BMqkAK1V575z6L%2BVPOl4UE9fUc5t1W9OUTc%2FamPCqJPwgqSNuviYMeQ3tDwrSBM5BAJLVL5pSl7o6nZ5jbobiIFveKUoVw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3e38a639c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 205,
          "responseSize": 0
        },
        "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
        "assertions": [
          {
            "assertion": "Verify status code is 204",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d3575d95-ebbb-4345-be83-3a4d8df6c3f7",
          "length": 5,
          "cycles": 6,
          "position": 4,
          "iteration": 4,
          "httpRequestId": "6997109f-43d5-4ff2-9417-d045fc04e42b"
        },
        "item": {
          "id": "ffe21e83-1d9c-42d0-8708-86335dc64a8e",
          "name": "Get User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a404abf-57d0-48a5-89d5-5eba3109deb2",
                "type": "text/javascript",
                "exec": [
                  "let statusCode = pm.environment.get(\"statusCode\");",
                  "",
                  "pm.test(`Verify status code is ${statusCode}`, function () {",
                  "    pm.response.to.have.status(statusCode);",
                  "})"
                ],
                "_lastExecutionId": "27f58e83-c687-4137-a4f7-369985025ae4"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "157f8cf6-aa9c-4030-a40e-0fd842d85f72",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                ],
                "_lastExecutionId": "413b43b8-7a16-4612-96b2-dc96095f18bd"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "143"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a520769f-be61-4d6d-bfa9-ea9a0d6f77fb",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "9691c169-96eb-4f44-99b8-047361e4ade2",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:31 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "BYPASS"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=etJHUnCoslLPiTHFA3MSVv5DHNdL%2FMUrwk5QlW9ge%2F9x2HHU6cAPpoW%2B1VUwalg%2Baw5oaF%2F1QMplbUk7wn9qAzNVaNBRv2TxJLm3W%2FlBbLA4wtBmh%2FQjcJ8hQg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3e51d5b9c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              125
            ]
          },
          "cookie": [],
          "responseTime": 290,
          "responseSize": 2
        },
        "id": "ffe21e83-1d9c-42d0-8708-86335dc64a8e",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2cb2c2aa-a559-4735-af12-62a347c99700",
          "length": 5,
          "cycles": 6,
          "position": 0,
          "iteration": 5,
          "cr": true,
          "httpRequestId": "4d3ad56f-4c6a-482c-bc78-bcc9c13cb33b"
        },
        "item": {
          "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df5e2643-0e77-4a30-b27d-46f9cd1cc812",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "55e57a3b-914e-4c8f-b33b-8ccee707b27e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1d95340b-829c-4e9d-8ce6-16d1bdd42669",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "4e213e10-eb42-4833-b2c1-8b9e4bae8a05",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:32 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=SjnNjFMXCk0aEnAv5is6WqqR7wsXBTr%2FLDbTyZTc6zSk0rzavNJRnaHtGybajXaLgRR46nXkES8oZC8fEorIPZjmNMQR%2FUAZM4lLAufHpBPNWeKtGeQc4woDjw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3e71a079c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 216,
          "responseSize": 29
        },
        "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d09fb66b-19f3-4757-80eb-b3d0912f8818",
          "length": 5,
          "cycles": 6,
          "position": 1,
          "iteration": 5,
          "httpRequestId": "2d92839c-b0d6-41d3-863d-056e66e1320d"
        },
        "item": {
          "id": "559150ff-9634-488e-b864-e07d5af986ed",
          "name": "Create User",
          "request": {
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ce32e8ff-35cc-4e59-b48c-ccdc83ce0b52",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify correct user infos is created.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "})",
                  "",
                  "pm.environment.set(\"userId\", pm.response.json().id);",
                  ""
                ],
                "_lastExecutionId": "df3b9490-05b3-4316-b7d2-36310df2c3ff"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "35b3998f-9b88-49d5-813b-d6213560121b",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('name'),\r",
                  "    \"job\": pm.environment.get('job')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                ],
                "_lastExecutionId": "268ff74a-4e6c-4548-97c0-c32af561c4b3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "891297fc-0dbf-42db-bb8a-d6f6f18a0d10",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "34",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"morpheus\",\"job\":\"leader\"}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "1e4107dd-bdbc-42b6-82f0-30e00e0e9182",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:32 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "83"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"53-jJ0+rNr7Yw+YonzpazW57nMc1R8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=4PPecATmpV%2BS7kPwIEhpQQq967dbQnC7Ws5qUQ%2FxP%2BFru0%2FZkCYAD8P0u6XDozeV2ZY%2FEGOqjafRT3ko%2F2zhzW5WLj1F8Q2JvH0aPFrA8mtlaAZWcVkygrynXQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3e8dd9f9c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              109,
              111,
              114,
              112,
              104,
              101,
              117,
              115,
              34,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              34,
              108,
              101,
              97,
              100,
              101,
              114,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              52,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              51,
              50,
              46,
              50,
              56,
              50,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 212,
          "responseSize": 83
        },
        "id": "559150ff-9634-488e-b864-e07d5af986ed",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "Verify correct user infos is created.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a276331e-6026-4c8e-b04e-41a8a70f3f91",
          "length": 5,
          "cycles": 6,
          "position": 2,
          "iteration": 5,
          "httpRequestId": "042a6faa-014f-4feb-ac6a-0ee1dcd8f503"
        },
        "item": {
          "id": "b2a6499e-647c-4750-a372-f868459d8074",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a27b0cb0-5845-45f6-b3b3-9fe61004015c",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "});"
                ],
                "_lastExecutionId": "46fe68ee-26cf-4791-8dad-7651aed178bf"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "399db046-2b57-4314-8fae-4d31c35d073d",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('updateName'),\r",
                  "    \"job\": pm.environment.get('updateJob')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                ],
                "_lastExecutionId": "60143594-5eeb-4785-b6bb-9787110c3169"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "24"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f6c86a9d-f6cf-42bc-a40b-b8a67def4037",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "36",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"morpheus2\",\"job\":\"leader2\"}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "b940be03-de56-467b-913c-64ce91079b3a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:32 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"4b-4jOhz+zTMVUIUo0xutyiDlxq60Q\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=yFTEb1i3AAv2psS2tL8Vq%2FA6AQ8853%2BRSpIAzkwXQmf0UVWmvQ6ZUxdK54Z77m0dElQp4ctBhzhR5PI05JcDv2Ul%2FM4K7o61nsRv8UKPygqMaqHr92ppjgak7Q%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3ea78849c40-IAD"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              109,
              111,
              114,
              112,
              104,
              101,
              117,
              115,
              50,
              34,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              34,
              108,
              101,
              97,
              100,
              101,
              114,
              50,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              50,
              58,
              51,
              50,
              46,
              53,
              53,
              49,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 213,
          "responseSize": 75
        },
        "id": "b2a6499e-647c-4750-a372-f868459d8074",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verify user infos is updated as expectation.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1db6f4e3-4007-4c11-87f6-438d30412fe0",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 5,
          "httpRequestId": "476f4b30-463b-43ad-be68-520cbbebe49a"
        },
        "item": {
          "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4f1dcfb9-aadb-4bc5-adff-2fdef34c915d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "2c578f16-5637-49b0-b660-4791118cb009"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "556b8fb0-8fe2-416d-bb48-b8c6e6ceba59",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "5ec18a1a-802d-4c61-aaa7-416e82892cfb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "24"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "584e0aea-77dc-4ad1-96f2-950a2b179e00",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "d1aa872e-80d6-4e88-9116-281903c93f86",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:32 GMT"
            },
            {
              "key": "Content-Length",
              "value": "0"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=dbhMCG5jPVvCWpS0CB%2FTfuQ3zLCel6Jwy3bSMcxCMjxOf%2F5AF2LTa75NDzdd0uYAcvYcvPFuAQLhJ0shTyhfLJnvFMl4oMgvNgD9g6cpFB%2BBoyDx81GIyA8XYQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3ec0b989c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 215,
          "responseSize": 0
        },
        "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
        "assertions": [
          {
            "assertion": "Verify status code is 204",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "33e0dabe-6d3e-4f63-a66a-33b8fd11b23d",
          "length": 5,
          "cycles": 6,
          "position": 4,
          "iteration": 5,
          "httpRequestId": "2b754d10-0544-42b8-98a9-802317a73fa0"
        },
        "item": {
          "id": "ffe21e83-1d9c-42d0-8708-86335dc64a8e",
          "name": "Get User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a404abf-57d0-48a5-89d5-5eba3109deb2",
                "type": "text/javascript",
                "exec": [
                  "let statusCode = pm.environment.get(\"statusCode\");",
                  "",
                  "pm.test(`Verify status code is ${statusCode}`, function () {",
                  "    pm.response.to.have.status(statusCode);",
                  "})"
                ],
                "_lastExecutionId": "27f58e83-c687-4137-a4f7-369985025ae4"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "157f8cf6-aa9c-4030-a40e-0fd842d85f72",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                ],
                "_lastExecutionId": "413b43b8-7a16-4612-96b2-dc96095f18bd"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "24"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "23b0e4c6-1682-47b9-9b17-80bfa0eea382",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "be3c5138-f2ed-498d-aa61-40ec5ba075a6",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:32:33 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "BYPASS"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=PlqG6T41oEdJUdk7brHkzmZVstzPcDIzUMlTNLaX9GRGc62ZDJmVISHrmZUlaMUNzPFyrONVtQPa6ksqtl9rHfUIefNILl5M1LmRn54ALAoDW5Ut%2F847c8O0lQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c3edae2c9c40-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              125
            ]
          },
          "cookie": [],
          "responseTime": 199,
          "responseSize": 2
        },
        "id": "ffe21e83-1d9c-42d0-8708-86335dc64a8e",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 1127
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Verify status code is 404",
          "message": "expected response to have status code 404 but got 200",
          "stack": "AssertionError: expected response to have status code 404 but got 200\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "b375d5125924102d80d07a96cd86aefc",
          "id": "5a2f2ebe-9ceb-4866-86b1-a14faf3d749d",
          "timestamp": 1661099548617,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "b2a6499e-647c-4750-a372-f868459d8074",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a27b0cb0-5845-45f6-b3b3-9fe61004015c",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "});"
                ],
                "_lastExecutionId": "46fe68ee-26cf-4791-8dad-7651aed178bf"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "399db046-2b57-4314-8fae-4d31c35d073d",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('updateName'),\r",
                  "    \"job\": pm.environment.get('updateJob')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                ],
                "_lastExecutionId": "60143594-5eeb-4785-b6bb-9787110c3169"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b"
          },
          "item": [
            {
              "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
              "name": "Login",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "login"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
                  "options": {
                    "raw": {
                      "language": "text"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df5e2643-0e77-4a30-b27d-46f9cd1cc812",
                    "type": "text/javascript",
                    "exec": [
                      "const responseSchema = {",
                      "    \"type\": \"object\",",
                      "    \"properties\": {",
                      "        \"token\": { \"type\": \"string\" }",
                      "    },",
                      "    \"required\": [\"token\"]",
                      "};",
                      "",
                      "pm.test(\"Verify status code is 200.\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Verify response body has correct schema.\", function () {",
                      "    pm.response.to.have.jsonSchema(responseSchema);",
                      "});",
                      "",
                      "pm.environment.set(\"token\", pm.response.json().token);",
                      ""
                    ],
                    "_lastExecutionId": "55e57a3b-914e-4c8f-b33b-8ccee707b27e"
                  }
                }
              ]
            },
            {
              "id": "559150ff-9634-488e-b864-e07d5af986ed",
              "name": "Create User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ce32e8ff-35cc-4e59-b48c-ccdc83ce0b52",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify correct user infos is created.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "})",
                      "",
                      "pm.environment.set(\"userId\", pm.response.json().id);",
                      ""
                    ],
                    "_lastExecutionId": "df3b9490-05b3-4316-b7d2-36310df2c3ff"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "35b3998f-9b88-49d5-813b-d6213560121b",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('name'),\r",
                      "    \"job\": pm.environment.get('job')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "268ff74a-4e6c-4548-97c0-c32af561c4b3"
                  }
                }
              ]
            },
            {
              "id": "b2a6499e-647c-4750-a372-f868459d8074",
              "name": "Update User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}"
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a27b0cb0-5845-45f6-b3b3-9fe61004015c",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "});"
                    ],
                    "_lastExecutionId": "46fe68ee-26cf-4791-8dad-7651aed178bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "399db046-2b57-4314-8fae-4d31c35d073d",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('updateName'),\r",
                      "    \"job\": pm.environment.get('updateJob')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "60143594-5eeb-4785-b6bb-9787110c3169"
                  }
                }
              ]
            },
            {
              "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
              "name": "Delete User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4f1dcfb9-aadb-4bc5-adff-2fdef34c915d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "})"
                    ],
                    "_lastExecutionId": "2c578f16-5637-49b0-b660-4791118cb009"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "556b8fb0-8fe2-416d-bb48-b8c6e6ceba59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "5ec18a1a-802d-4c61-aaa7-416e82892cfb"
                  }
                }
              ]
            },
            {
              "id": "ffe21e83-1d9c-42d0-8708-86335dc64a8e",
              "name": "Get User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a404abf-57d0-48a5-89d5-5eba3109deb2",
                    "type": "text/javascript",
                    "exec": [
                      "let statusCode = pm.environment.get(\"statusCode\");",
                      "",
                      "pm.test(`Verify status code is ${statusCode}`, function () {",
                      "    pm.response.to.have.status(statusCode);",
                      "})"
                    ],
                    "_lastExecutionId": "27f58e83-c687-4137-a4f7-369985025ae4"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "157f8cf6-aa9c-4030-a40e-0fd842d85f72",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "413b43b8-7a16-4612-96b2-dc96095f18bd"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "57eca32b-6f06-4a38-be6b-500cf2cde4f4",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "b9eaec18-df50-475b-a031-3cdffe6f2efe"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "7b4a6018-5960-40b4-ac2a-97b8365f00a9",
                "type": "text/javascript",
                "exec": [
                  "postman.setNextRequest(getNextRequest());",
                  "",
                  "function getNextRequest() {",
                  "    let requests;",
                  "    let dataset;",
                  "    let nextDataset;",
                  "    let nextRequest;",
                  "",
                  "    if(Array.isArray(pm.globals.get(\"remainingDataset\")) === true ){",
                  "        dataset = pm.globals.get(\"remainingDataset\");",
                  "    } else {",
                  "        dataset = pm.iterationData.get(\"dataset\");",
                  "        if (dataset === undefined)",
                  "            pm.globals.set(\"remainingDataset\", []);",
                  "    }",
                  "",
                  "    let remainingRequests = pm.globals.get(\"remainingRequests\");",
                  "    if(Array.isArray(remainingRequests) === true ){",
                  "        requests = pm.globals.get(\"remainingRequests\");",
                  "    } else {",
                  "        requests = pm.iterationData.get(\"requests\");    ",
                  "    }",
                  "",
                  "    if(dataset && dataset.length > 0 && (remainingRequests === undefined || remainingRequests.length ===0)) {",
                  "        nextDataset = dataset.shift();",
                  "        pm.globals.set(\"remainingDataset\", dataset);",
                  "        for (const [key, value] of Object.entries(nextDataset)) {",
                  "            pm.environment.set(key, value);",
                  "        }",
                  "        requests = pm.iterationData.get(\"requests\");",
                  "    }",
                  "",
                  "    nextRequest = requests.shift();",
                  "    pm.globals.set(\"remainingRequests\", requests);",
                  "",
                  "    if(nextRequest === undefined && nextDataset === undefined){",
                  "        pm.globals.clear(\"remainingRequests\");",
                  "        pm.globals.clear(\"remainingDataset\");",
                  "        return null;",
                  "    }",
                  "",
                  "    return nextRequest;",
                  "}"
                ],
                "_lastExecutionId": "8c55b6a7-aeb9-47a8-85a3-2944e72f26bb"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b",
            "name": "API Testing",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "638304de-f511-482d-98ea-508136392d44",
          "length": 5,
          "cycles": 6,
          "position": 2,
          "iteration": 1,
          "httpRequestId": "120ca436-0f7c-4fb0-9db8-62ebcaa4fb38",
          "scriptId": "a27b0cb0-5845-45f6-b3b3-9fe61004015c",
          "execution": "58b21a01-c9d5-4227-bc60-ce89012c00fe"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Verify status code is 404",
          "message": "expected response to have status code 404 but got 204",
          "stack": "AssertionError: expected response to have status code 404 but got 204\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "20c5b882ef4a771ed279e97dc16ed51a",
          "id": "c814b1d5-d242-47fb-835a-2b447b0e1677",
          "timestamp": 1661099549685,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4f1dcfb9-aadb-4bc5-adff-2fdef34c915d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "2c578f16-5637-49b0-b660-4791118cb009"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "556b8fb0-8fe2-416d-bb48-b8c6e6ceba59",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "5ec18a1a-802d-4c61-aaa7-416e82892cfb"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b"
          },
          "item": [
            {
              "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
              "name": "Login",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "login"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
                  "options": {
                    "raw": {
                      "language": "text"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df5e2643-0e77-4a30-b27d-46f9cd1cc812",
                    "type": "text/javascript",
                    "exec": [
                      "const responseSchema = {",
                      "    \"type\": \"object\",",
                      "    \"properties\": {",
                      "        \"token\": { \"type\": \"string\" }",
                      "    },",
                      "    \"required\": [\"token\"]",
                      "};",
                      "",
                      "pm.test(\"Verify status code is 200.\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Verify response body has correct schema.\", function () {",
                      "    pm.response.to.have.jsonSchema(responseSchema);",
                      "});",
                      "",
                      "pm.environment.set(\"token\", pm.response.json().token);",
                      ""
                    ],
                    "_lastExecutionId": "55e57a3b-914e-4c8f-b33b-8ccee707b27e"
                  }
                }
              ]
            },
            {
              "id": "559150ff-9634-488e-b864-e07d5af986ed",
              "name": "Create User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ce32e8ff-35cc-4e59-b48c-ccdc83ce0b52",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify correct user infos is created.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "})",
                      "",
                      "pm.environment.set(\"userId\", pm.response.json().id);",
                      ""
                    ],
                    "_lastExecutionId": "df3b9490-05b3-4316-b7d2-36310df2c3ff"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "35b3998f-9b88-49d5-813b-d6213560121b",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('name'),\r",
                      "    \"job\": pm.environment.get('job')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "268ff74a-4e6c-4548-97c0-c32af561c4b3"
                  }
                }
              ]
            },
            {
              "id": "b2a6499e-647c-4750-a372-f868459d8074",
              "name": "Update User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}"
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a27b0cb0-5845-45f6-b3b3-9fe61004015c",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "});"
                    ],
                    "_lastExecutionId": "46fe68ee-26cf-4791-8dad-7651aed178bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "399db046-2b57-4314-8fae-4d31c35d073d",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('updateName'),\r",
                      "    \"job\": pm.environment.get('updateJob')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "60143594-5eeb-4785-b6bb-9787110c3169"
                  }
                }
              ]
            },
            {
              "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
              "name": "Delete User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4f1dcfb9-aadb-4bc5-adff-2fdef34c915d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "})"
                    ],
                    "_lastExecutionId": "2c578f16-5637-49b0-b660-4791118cb009"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "556b8fb0-8fe2-416d-bb48-b8c6e6ceba59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "5ec18a1a-802d-4c61-aaa7-416e82892cfb"
                  }
                }
              ]
            },
            {
              "id": "ffe21e83-1d9c-42d0-8708-86335dc64a8e",
              "name": "Get User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a404abf-57d0-48a5-89d5-5eba3109deb2",
                    "type": "text/javascript",
                    "exec": [
                      "let statusCode = pm.environment.get(\"statusCode\");",
                      "",
                      "pm.test(`Verify status code is ${statusCode}`, function () {",
                      "    pm.response.to.have.status(statusCode);",
                      "})"
                    ],
                    "_lastExecutionId": "27f58e83-c687-4137-a4f7-369985025ae4"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "157f8cf6-aa9c-4030-a40e-0fd842d85f72",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "413b43b8-7a16-4612-96b2-dc96095f18bd"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "57eca32b-6f06-4a38-be6b-500cf2cde4f4",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "b9eaec18-df50-475b-a031-3cdffe6f2efe"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "7b4a6018-5960-40b4-ac2a-97b8365f00a9",
                "type": "text/javascript",
                "exec": [
                  "postman.setNextRequest(getNextRequest());",
                  "",
                  "function getNextRequest() {",
                  "    let requests;",
                  "    let dataset;",
                  "    let nextDataset;",
                  "    let nextRequest;",
                  "",
                  "    if(Array.isArray(pm.globals.get(\"remainingDataset\")) === true ){",
                  "        dataset = pm.globals.get(\"remainingDataset\");",
                  "    } else {",
                  "        dataset = pm.iterationData.get(\"dataset\");",
                  "        if (dataset === undefined)",
                  "            pm.globals.set(\"remainingDataset\", []);",
                  "    }",
                  "",
                  "    let remainingRequests = pm.globals.get(\"remainingRequests\");",
                  "    if(Array.isArray(remainingRequests) === true ){",
                  "        requests = pm.globals.get(\"remainingRequests\");",
                  "    } else {",
                  "        requests = pm.iterationData.get(\"requests\");    ",
                  "    }",
                  "",
                  "    if(dataset && dataset.length > 0 && (remainingRequests === undefined || remainingRequests.length ===0)) {",
                  "        nextDataset = dataset.shift();",
                  "        pm.globals.set(\"remainingDataset\", dataset);",
                  "        for (const [key, value] of Object.entries(nextDataset)) {",
                  "            pm.environment.set(key, value);",
                  "        }",
                  "        requests = pm.iterationData.get(\"requests\");",
                  "    }",
                  "",
                  "    nextRequest = requests.shift();",
                  "    pm.globals.set(\"remainingRequests\", requests);",
                  "",
                  "    if(nextRequest === undefined && nextDataset === undefined){",
                  "        pm.globals.clear(\"remainingRequests\");",
                  "        pm.globals.clear(\"remainingDataset\");",
                  "        return null;",
                  "    }",
                  "",
                  "    return nextRequest;",
                  "}"
                ],
                "_lastExecutionId": "8c55b6a7-aeb9-47a8-85a3-2944e72f26bb"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b",
            "name": "API Testing",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "32d21038-2018-4a22-b396-adaed568d661",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "6432229d-82a6-4779-be1b-9cd9b5d45d10",
          "scriptId": "4f1dcfb9-aadb-4bc5-adff-2fdef34c915d",
          "execution": "e9f6a6fa-c9f7-4018-ac88-767c89a50667"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Verify status code is 404",
          "message": "expected response to have status code 404 but got 204",
          "stack": "AssertionError: expected response to have status code 404 but got 204\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "20c5b882ef4a771ed279e97dc16ed51a",
          "id": "491b7fb1-afac-44a7-bd52-531ed27fbdc5",
          "timestamp": 1661099550054,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4f1dcfb9-aadb-4bc5-adff-2fdef34c915d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "2c578f16-5637-49b0-b660-4791118cb009"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "556b8fb0-8fe2-416d-bb48-b8c6e6ceba59",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "5ec18a1a-802d-4c61-aaa7-416e82892cfb"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b"
          },
          "item": [
            {
              "id": "b5a897be-46ff-45e7-8ad6-7b6bc0d0d2a7",
              "name": "Login",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "login"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
                  "options": {
                    "raw": {
                      "language": "text"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df5e2643-0e77-4a30-b27d-46f9cd1cc812",
                    "type": "text/javascript",
                    "exec": [
                      "const responseSchema = {",
                      "    \"type\": \"object\",",
                      "    \"properties\": {",
                      "        \"token\": { \"type\": \"string\" }",
                      "    },",
                      "    \"required\": [\"token\"]",
                      "};",
                      "",
                      "pm.test(\"Verify status code is 200.\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Verify response body has correct schema.\", function () {",
                      "    pm.response.to.have.jsonSchema(responseSchema);",
                      "});",
                      "",
                      "pm.environment.set(\"token\", pm.response.json().token);",
                      ""
                    ],
                    "_lastExecutionId": "55e57a3b-914e-4c8f-b33b-8ccee707b27e"
                  }
                }
              ]
            },
            {
              "id": "559150ff-9634-488e-b864-e07d5af986ed",
              "name": "Create User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ce32e8ff-35cc-4e59-b48c-ccdc83ce0b52",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify correct user infos is created.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "})",
                      "",
                      "pm.environment.set(\"userId\", pm.response.json().id);",
                      ""
                    ],
                    "_lastExecutionId": "df3b9490-05b3-4316-b7d2-36310df2c3ff"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "35b3998f-9b88-49d5-813b-d6213560121b",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('name'),\r",
                      "    \"job\": pm.environment.get('job')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "268ff74a-4e6c-4548-97c0-c32af561c4b3"
                  }
                }
              ]
            },
            {
              "id": "b2a6499e-647c-4750-a372-f868459d8074",
              "name": "Update User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}"
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a27b0cb0-5845-45f6-b3b3-9fe61004015c",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "});"
                    ],
                    "_lastExecutionId": "46fe68ee-26cf-4791-8dad-7651aed178bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "399db046-2b57-4314-8fae-4d31c35d073d",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('updateName'),\r",
                      "    \"job\": pm.environment.get('updateJob')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "60143594-5eeb-4785-b6bb-9787110c3169"
                  }
                }
              ]
            },
            {
              "id": "ae331f8b-ced6-4a9c-a805-f192132c61e2",
              "name": "Delete User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4f1dcfb9-aadb-4bc5-adff-2fdef34c915d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "})"
                    ],
                    "_lastExecutionId": "2c578f16-5637-49b0-b660-4791118cb009"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "556b8fb0-8fe2-416d-bb48-b8c6e6ceba59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "5ec18a1a-802d-4c61-aaa7-416e82892cfb"
                  }
                }
              ]
            },
            {
              "id": "ffe21e83-1d9c-42d0-8708-86335dc64a8e",
              "name": "Get User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a404abf-57d0-48a5-89d5-5eba3109deb2",
                    "type": "text/javascript",
                    "exec": [
                      "let statusCode = pm.environment.get(\"statusCode\");",
                      "",
                      "pm.test(`Verify status code is ${statusCode}`, function () {",
                      "    pm.response.to.have.status(statusCode);",
                      "})"
                    ],
                    "_lastExecutionId": "27f58e83-c687-4137-a4f7-369985025ae4"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "157f8cf6-aa9c-4030-a40e-0fd842d85f72",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "413b43b8-7a16-4612-96b2-dc96095f18bd"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "57eca32b-6f06-4a38-be6b-500cf2cde4f4",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "b9eaec18-df50-475b-a031-3cdffe6f2efe"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "7b4a6018-5960-40b4-ac2a-97b8365f00a9",
                "type": "text/javascript",
                "exec": [
                  "postman.setNextRequest(getNextRequest());",
                  "",
                  "function getNextRequest() {",
                  "    let requests;",
                  "    let dataset;",
                  "    let nextDataset;",
                  "    let nextRequest;",
                  "",
                  "    if(Array.isArray(pm.globals.get(\"remainingDataset\")) === true ){",
                  "        dataset = pm.globals.get(\"remainingDataset\");",
                  "    } else {",
                  "        dataset = pm.iterationData.get(\"dataset\");",
                  "        if (dataset === undefined)",
                  "            pm.globals.set(\"remainingDataset\", []);",
                  "    }",
                  "",
                  "    let remainingRequests = pm.globals.get(\"remainingRequests\");",
                  "    if(Array.isArray(remainingRequests) === true ){",
                  "        requests = pm.globals.get(\"remainingRequests\");",
                  "    } else {",
                  "        requests = pm.iterationData.get(\"requests\");    ",
                  "    }",
                  "",
                  "    if(dataset && dataset.length > 0 && (remainingRequests === undefined || remainingRequests.length ===0)) {",
                  "        nextDataset = dataset.shift();",
                  "        pm.globals.set(\"remainingDataset\", dataset);",
                  "        for (const [key, value] of Object.entries(nextDataset)) {",
                  "            pm.environment.set(key, value);",
                  "        }",
                  "        requests = pm.iterationData.get(\"requests\");",
                  "    }",
                  "",
                  "    nextRequest = requests.shift();",
                  "    pm.globals.set(\"remainingRequests\", requests);",
                  "",
                  "    if(nextRequest === undefined && nextDataset === undefined){",
                  "        pm.globals.clear(\"remainingRequests\");",
                  "        pm.globals.clear(\"remainingDataset\");",
                  "        return null;",
                  "    }",
                  "",
                  "    return nextRequest;",
                  "}"
                ],
                "_lastExecutionId": "8c55b6a7-aeb9-47a8-85a3-2944e72f26bb"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b",
            "name": "API Testing",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "f7b025f5-0ebc-4f91-a360-7146106107ee",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "18732849-8959-44ef-987e-ecf5fbeed24d",
          "scriptId": "4f1dcfb9-aadb-4bc5-adff-2fdef34c915d",
          "execution": "cc44148d-98d3-4934-a9ab-494de1e4f22c"
        }
      }
    ],
    "error": null
  }
}