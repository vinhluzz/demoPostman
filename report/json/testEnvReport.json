{
  "collection": {
    "_": {
      "postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b"
    },
    "item": [
      {
        "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
        "name": "Login",
        "request": {
          "url": {
            "path": [
              "api",
              "login"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "21b7711d-122e-49ee-87a0-eb21e3c7e43b",
              "type": "text/javascript",
              "exec": [
                "const responseSchema = {",
                "    \"type\": \"object\",",
                "    \"properties\": {",
                "        \"token\": { \"type\": \"string\" }",
                "    },",
                "    \"required\": [\"token\"]",
                "};",
                "",
                "pm.test(\"Verify status code is 200.\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Verify response body has correct schema.\", function () {",
                "    pm.response.to.have.jsonSchema(responseSchema);",
                "});",
                "",
                "pm.environment.set(\"token\", pm.response.json().token);",
                ""
              ],
              "_lastExecutionId": "514460fc-e509-4643-8970-bf43c9227e7f"
            }
          }
        ]
      },
      {
        "id": "fdb2fc29-698d-435a-b06f-4f9ca607d3c5",
        "name": "Create User",
        "request": {
          "url": {
            "path": [
              "api",
              "users"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{requestBody}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8ebca6ec-72f4-4b2d-ae99-ce0988983ab3",
              "type": "text/javascript",
              "exec": [
                "const expectedObject = JSON.parse(pm.request.body.raw);",
                "",
                "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                "});",
                "",
                "pm.test(\"Verify correct user infos is created.\", function () {",
                "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                "})",
                "",
                "pm.environment.set(\"userId\", pm.response.json().id);",
                ""
              ],
              "_lastExecutionId": "aba4abfd-ebd5-4587-b122-68a106aefdfc"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "7075d2f3-9d52-459b-88fe-2518167cb705",
              "type": "text/javascript",
              "exec": [
                "let requestBody = {\r",
                "    \"name\": pm.environment.get('name'),\r",
                "    \"job\": pm.environment.get('job')\r",
                "}\r",
                "\r",
                "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
              ],
              "_lastExecutionId": "db2e6a6b-a185-4fd6-a7b5-26cddce7b512"
            }
          }
        ]
      },
      {
        "id": "a127de3c-1f85-4b31-9df6-70cd4ed3b90c",
        "name": "Update User",
        "request": {
          "url": {
            "path": [
              "api",
              "users",
              "{{userId}}"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{{requestBody}}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9e97ec12-da47-4dd3-aa40-5b1a22892897",
              "type": "text/javascript",
              "exec": [
                "const expectedObject = JSON.parse(pm.request.body.raw);",
                "",
                "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                "});",
                "",
                "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                "});"
              ],
              "_lastExecutionId": "3d69136e-2971-486a-b9d1-2c63a0616fef"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "1dee425d-4af5-4d9b-ba0b-afda8d17d03a",
              "type": "text/javascript",
              "exec": [
                "let requestBody = {\r",
                "    \"name\": pm.environment.get('updateName'),\r",
                "    \"job\": pm.environment.get('updateJob')\r",
                "}\r",
                "\r",
                "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
              ],
              "_lastExecutionId": "f8198e4b-b5d4-4d99-bc1e-b7ba86111bc1"
            }
          }
        ]
      },
      {
        "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
        "name": "Delete User",
        "request": {
          "url": {
            "path": [
              "api",
              "users",
              "{{userId}}"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1e154e16-9f60-4f55-8ac0-b9c4cd59d59f",
              "type": "text/javascript",
              "exec": [
                "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                "})"
              ],
              "_lastExecutionId": "1c1d3659-a7b4-4ca0-aded-886c8a018038"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "63933eec-e1bb-4171-b5a8-33bbd8b74577",
              "type": "text/javascript",
              "exec": [
                "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
              ],
              "_lastExecutionId": "65ee405c-5319-4c4b-a7f2-b1123fe410d8"
            }
          }
        ]
      },
      {
        "id": "3e4376c6-6a02-4839-aba5-7d8d3be513ea",
        "name": "Get User",
        "request": {
          "url": {
            "path": [
              "api",
              "users",
              "{{userId}}"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1caf4a30-4e56-4693-a996-fd1bb2cc9f0a",
              "type": "text/javascript",
              "exec": [
                "let statusCode = pm.environment.get(\"statusCode\");",
                "",
                "pm.test(`Verify status code is ${statusCode}`, function () {",
                "    pm.response.to.have.status(statusCode);",
                "})"
              ],
              "_lastExecutionId": "9ed76e2f-7ba1-40e8-8599-cc5c1115511e"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "fdf6f84c-01af-45c1-946c-24e60f365276",
              "type": "text/javascript",
              "exec": [
                "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
              ],
              "_lastExecutionId": "24adb4da-2621-4eed-82fd-bacc92919161"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "33c3b133-ee29-4363-bd8a-8e5d5b0f156f",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "e5588e25-78ee-4ba5-bc9e-df11a1ffd6a9"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "a74aebf9-008d-4b22-bf2c-9710c7b332ab",
          "type": "text/javascript",
          "exec": [
            "postman.setNextRequest(getNextRequest());",
            "",
            "function getNextRequest() {",
            "    let requests;",
            "    let dataset;",
            "    let nextDataset;",
            "    let nextRequest;",
            "",
            "    if(Array.isArray(pm.globals.get(\"remainingDataset\")) === true ){",
            "        dataset = pm.globals.get(\"remainingDataset\");",
            "    } else {",
            "        dataset = pm.iterationData.get(\"dataset\");",
            "        if (dataset === undefined)",
            "            pm.globals.set(\"remainingDataset\", []);",
            "    }",
            "",
            "    let remainingRequests = pm.globals.get(\"remainingRequests\");",
            "    if(Array.isArray(remainingRequests) === true ){",
            "        requests = pm.globals.get(\"remainingRequests\");",
            "    } else {",
            "        requests = pm.iterationData.get(\"requests\");    ",
            "    }",
            "",
            "    if(dataset && dataset.length > 0 && (remainingRequests === undefined || remainingRequests.length ===0)) {",
            "        nextDataset = dataset.shift();",
            "        pm.globals.set(\"remainingDataset\", dataset);",
            "        for (const [key, value] of Object.entries(nextDataset)) {",
            "            pm.environment.set(key, value);",
            "        }",
            "        requests = pm.iterationData.get(\"requests\");",
            "    }",
            "",
            "    nextRequest = requests.shift();",
            "    pm.globals.set(\"remainingRequests\", requests);",
            "",
            "    if(nextRequest === undefined && nextDataset === undefined){",
            "        pm.globals.clear(\"remainingRequests\");",
            "        pm.globals.clear(\"remainingDataset\");",
            "        return null;",
            "    }",
            "",
            "    return nextRequest;",
            "}"
          ],
          "_lastExecutionId": "e4d8d4ed-3cfa-4d10-a5a5-caa64845d5c9"
        }
      }
    ],
    "variable": [],
    "info": {
      "_postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b",
      "name": "API Testing",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2022-08-21T14:26:49.569Z",
      "postman_exported_using": "Postman/9.29.0"
    },
    "id": "c25a37f4-8350-4d39-a02a-284582449b7d",
    "name": "Test Environment",
    "values": [
      {
        "type": "any",
        "value": "https://reqres.in",
        "key": "baseURL"
      },
      {
        "type": "any",
        "value": "QpwL5tke4Pnpja7X4",
        "key": "token"
      },
      {
        "type": "any",
        "value": "701",
        "key": "userId"
      },
      {
        "type": "any",
        "value": "morpheus",
        "key": "name"
      },
      {
        "type": "any",
        "value": "leader",
        "key": "job"
      },
      {
        "type": "any",
        "value": 201,
        "key": "createUserStatusCode"
      },
      {
        "type": "any",
        "value": 200,
        "key": "updateUserStatusCode"
      },
      {
        "type": "any",
        "value": "{\"name\":\"morpheus2\",\"job\":\"leader2\"}",
        "key": "requestBody"
      },
      {
        "type": "any",
        "value": 404,
        "key": "statusCode"
      },
      {
        "type": "any",
        "value": "morpheus2",
        "key": "updateName"
      },
      {
        "type": "any",
        "value": "leader2",
        "key": "updateJob"
      },
      {
        "type": "any",
        "value": 204,
        "key": "deleteUserStatusCode"
      },
      {
        "type": "any",
        "value": 404,
        "key": "getUserStatusCode"
      }
    ]
  },
  "globals": {
    "id": "8bf26690-b13b-448e-956d-f7cf79871c17",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 25,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 94,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 25,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 25,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 25,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 40,
        "pending": 0,
        "failed": 3
      },
      "testScripts": {
        "total": 50,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 44,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 199.76,
      "responseMin": 13,
      "responseMax": 322,
      "responseSd": 59.644466633544475,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1661099506395,
      "completed": 1661099512773
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 5,
          "cycles": 6,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "66a7316b-8e5f-46b3-a593-c80513ecb353",
          "httpRequestId": "8051010d-529d-4885-abb3-c69ae04d7830"
        },
        "item": {
          "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "21b7711d-122e-49ee-87a0-eb21e3c7e43b",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "514460fc-e509-4643-8970-bf43c9227e7f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "667bcc41-366c-4cd6-97b3-9b784cfd0122",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "8b7c35ad-0699-4e2c-a2d3-637b262ceabc",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:46 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=UfPKaaWWWS5l1K%2BlSsqA9KxBLUsAA5HP4g%2FUAnX6Plv5UNsME%2BbfrbhVIQ4qHV57p0BK3Uuy9CEHEcQEd7qbA%2FlTQi83r8lTyQ2lJzptomEYe4folZdMhJOCYA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2cbe8ee5758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 322,
          "responseSize": 29
        },
        "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7ef7930e-9f17-4292-be29-c27431eb035f",
          "length": 5,
          "cycles": 6,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "61937c09-8093-439c-8174-40ce0490a6a1"
        },
        "item": {
          "id": "fdb2fc29-698d-435a-b06f-4f9ca607d3c5",
          "name": "Create User",
          "request": {
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8ebca6ec-72f4-4b2d-ae99-ce0988983ab3",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify correct user infos is created.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "})",
                  "",
                  "pm.environment.set(\"userId\", pm.response.json().id);",
                  ""
                ],
                "_lastExecutionId": "aba4abfd-ebd5-4587-b122-68a106aefdfc"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7075d2f3-9d52-459b-88fe-2518167cb705",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('name'),\r",
                  "    \"job\": pm.environment.get('job')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                ],
                "_lastExecutionId": "db2e6a6b-a185-4fd6-a7b5-26cddce7b512"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0d8e5852-c1df-4a6a-9315-f82582fd56cb",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "36",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"morpheus1\",\"job\":\"leader1\"}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6a2bfdd0-08b1-4672-b3cd-4a0ebbbab0da",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:47 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "86"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"56-KruaHggQpiuEpIJ+3uyQAdZyC5Y\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=6%2BuhR8jV%2BCek%2FHm4c%2B5hSrf7MV226zvmtNyQn46cT6v4uhxc9RNtIU0sMjfNEE7Snnik3dUD1Np5T28nWOYn69XwTBoq6SYFEPPWOqM6wUnfnjc%2F51JHcmFJBA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2ce4c615758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              109,
              111,
              114,
              112,
              104,
              101,
              117,
              115,
              49,
              34,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              34,
              108,
              101,
              97,
              100,
              101,
              114,
              49,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              56,
              55,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              49,
              58,
              52,
              55,
              46,
              48,
              56,
              54,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 233,
          "responseSize": 86
        },
        "id": "fdb2fc29-698d-435a-b06f-4f9ca607d3c5",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "Verify correct user infos is created.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5a5fde3d-7ea7-4a11-9197-b42d3c898dc1",
          "length": 5,
          "cycles": 6,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f2cb0e7d-a75b-44af-8b15-181f0cff2574"
        },
        "item": {
          "id": "fdb2fc29-698d-435a-b06f-4f9ca607d3c5",
          "name": "Create User",
          "request": {
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8ebca6ec-72f4-4b2d-ae99-ce0988983ab3",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify correct user infos is created.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "})",
                  "",
                  "pm.environment.set(\"userId\", pm.response.json().id);",
                  ""
                ],
                "_lastExecutionId": "aba4abfd-ebd5-4587-b122-68a106aefdfc"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7075d2f3-9d52-459b-88fe-2518167cb705",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('name'),\r",
                  "    \"job\": pm.environment.get('job')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                ],
                "_lastExecutionId": "db2e6a6b-a185-4fd6-a7b5-26cddce7b512"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "80b2b7cb-acd1-444d-83da-8ed3388cefb6",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "20",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":12,\"job\":25}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "89798e1a-e4d0-4614-ae8d-4701765a52f5",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:47 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "70"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"46-vlbIOrcjHQewbUI/9MdEnrqZjgk\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=osEX1zQTYkVYIKifUh5W0drq9b7oK5KJVjVDIPl%2BvvFjEpkXjepnrUUFyZepNdWRB%2F9i6QOIyshwDKDHUW%2B66FuOtMXXM4ETTN%2Bac8guxkFYEqDdRyFdjdIqZA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2d01f7b5758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              49,
              50,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              50,
              53,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              48,
              48,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              49,
              58,
              52,
              55,
              46,
              51,
              54,
              52,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 202,
          "responseSize": 70
        },
        "id": "fdb2fc29-698d-435a-b06f-4f9ca607d3c5",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "Verify correct user infos is created.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cf6fcb5d-2d33-423d-b3f7-3c0d4bb9a50c",
          "length": 5,
          "cycles": 6,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c1683be0-8d82-4b02-99d8-ab7ef21312eb"
        },
        "item": {
          "id": "fdb2fc29-698d-435a-b06f-4f9ca607d3c5",
          "name": "Create User",
          "request": {
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8ebca6ec-72f4-4b2d-ae99-ce0988983ab3",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify correct user infos is created.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "})",
                  "",
                  "pm.environment.set(\"userId\", pm.response.json().id);",
                  ""
                ],
                "_lastExecutionId": "aba4abfd-ebd5-4587-b122-68a106aefdfc"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7075d2f3-9d52-459b-88fe-2518167cb705",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('name'),\r",
                  "    \"job\": pm.environment.get('job')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                ],
                "_lastExecutionId": "db2e6a6b-a185-4fd6-a7b5-26cddce7b512"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f7579e8f-b6f2-4c2a-8e4c-600c01db4e64",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "24",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":null,\"job\":null}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "f6244ae4-fa47-4051-868e-e5ee656e86f2",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:47 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "74"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"4a-B2jSuQTyhTyvKT+FemeljkyhNOc\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=M%2FuQ%2FvEDF5Vyn4RqEfEKZ1SRkwPfZmrhzlv1CYH1%2FMdAzejvWc4MN5J%2FxxdLwZnrm2A6JxlU7Hc6YGhOuHYql%2Buf8jSOalA8MWA7RjIe25IEgjD8uKRab0XEUw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2d1ca105758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              51,
              49,
              56,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              49,
              58,
              52,
              55,
              46,
              54,
              52,
              51,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 225,
          "responseSize": 74
        },
        "id": "fdb2fc29-698d-435a-b06f-4f9ca607d3c5",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "Verify correct user infos is created.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0e788445-95c5-42be-bcd0-7e4061c0cc8e",
          "length": 5,
          "cycles": 6,
          "position": 0,
          "iteration": 1,
          "cr": true,
          "httpRequestId": "09259547-170f-43c4-a73a-fa47be1002dd"
        },
        "item": {
          "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "21b7711d-122e-49ee-87a0-eb21e3c7e43b",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "514460fc-e509-4643-8970-bf43c9227e7f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9e866a8b-71c2-4c48-bcdc-3bb8daf60256",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "012125bf-703f-47cd-8882-43de49bbd880",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:47 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=g6jPjtJTCe0QKNm6RiNr05koY4SLXgWYR%2BiYTiCwVqi2NpK%2Fk0S2K7uTYTlJuxQhnKfphB9hS%2BJ2BhBupUUbS41ONJERonqj8ICdRKTjvEnXo9aB6C2Tq380xw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2d38c925758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 204,
          "responseSize": 29
        },
        "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c9be26e1-d3c8-4033-ad13-11982fc35456",
          "length": 5,
          "cycles": 6,
          "position": 2,
          "iteration": 1,
          "httpRequestId": "a49be8a4-9642-4172-8c50-c3c5df66ba69"
        },
        "item": {
          "id": "a127de3c-1f85-4b31-9df6-70cd4ed3b90c",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9e97ec12-da47-4dd3-aa40-5b1a22892897",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "});"
                ],
                "_lastExecutionId": "3d69136e-2971-486a-b9d1-2c63a0616fef"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "1dee425d-4af5-4d9b-ba0b-afda8d17d03a",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('updateName'),\r",
                  "    \"job\": pm.environment.get('updateJob')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                ],
                "_lastExecutionId": "f8198e4b-b5d4-4d99-bc1e-b7ba86111bc1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "2"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0179629a-1d36-4779-b8f8-11705c3857e3",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "36",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"morpheus1\",\"job\":\"leader1\"}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "139e13b9-c71d-4741-aac7-a5e0361766ea",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:48 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"4b-36wxjR0/aTdAaRjKpoZbt2dnD28\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=GcMRIJAAOWARrlPw6ZyjWY%2FWQQ%2B4o9pJ%2BtvRoORmIsrkh4CMNvGzohvueiKLxu3tARkdPRzrwVFfWcooiHxtt0hfVfzmMyRtJ05bJZ0FYe9djEAiSvUCcm%2B5tg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2d53ed25758-IAD"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              109,
              111,
              114,
              112,
              104,
              101,
              117,
              115,
              49,
              34,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              34,
              108,
              101,
              97,
              100,
              101,
              114,
              49,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              49,
              58,
              52,
              56,
              46,
              50,
              48,
              49,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 226,
          "responseSize": 75
        },
        "id": "a127de3c-1f85-4b31-9df6-70cd4ed3b90c",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verify user infos is updated as expectation.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "33cb360a-aade-49a6-8822-75d5618ad3f5",
          "length": 5,
          "cycles": 6,
          "position": 2,
          "iteration": 1,
          "httpRequestId": "bd24743a-c707-460d-951b-fc5d116b1199"
        },
        "item": {
          "id": "a127de3c-1f85-4b31-9df6-70cd4ed3b90c",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9e97ec12-da47-4dd3-aa40-5b1a22892897",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "});"
                ],
                "_lastExecutionId": "3d69136e-2971-486a-b9d1-2c63a0616fef"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "1dee425d-4af5-4d9b-ba0b-afda8d17d03a",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('updateName'),\r",
                  "    \"job\": pm.environment.get('updateJob')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                ],
                "_lastExecutionId": "f8198e4b-b5d4-4d99-bc1e-b7ba86111bc1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              ""
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "685d582d-afea-4d93-9cd2-a3d572cfd4ba",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "20",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":12,\"job\":25}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3768577e-6b61-446c-a92c-7ffd856120fb",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:48 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"3b-Uh+x42+zMc5YFG7QrLP4sw5A4nU\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=zbmt1OllRaQ%2Fq5kKm2e27SVfNv2W14ydsef7DMd%2BTJH77WdrvMgq4%2BbV79pR4FX%2BvmYDWPsXclguskV%2FZsoQjlG0KAFVABYbOg3yjoBOXX1Lo0AcZQZ1QIEXKQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2d6f93f5758-IAD"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              49,
              50,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              50,
              53,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              49,
              58,
              52,
              56,
              46,
              52,
              55,
              52,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 219,
          "responseSize": 59
        },
        "id": "a127de3c-1f85-4b31-9df6-70cd4ed3b90c",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Verify status code is 404",
              "message": "expected response to have status code 404 but got 200",
              "stack": "AssertionError: expected response to have status code 404 but got 200\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "Verify user infos is updated as expectation.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c0d0abe2-4f0e-4087-8fd0-6c822d3a0567",
          "length": 5,
          "cycles": 6,
          "position": 2,
          "iteration": 1,
          "httpRequestId": "6782647b-dff8-46a7-98ac-c3bbb1a337a1"
        },
        "item": {
          "id": "a127de3c-1f85-4b31-9df6-70cd4ed3b90c",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9e97ec12-da47-4dd3-aa40-5b1a22892897",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "});"
                ],
                "_lastExecutionId": "3d69136e-2971-486a-b9d1-2c63a0616fef"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "1dee425d-4af5-4d9b-ba0b-afda8d17d03a",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('updateName'),\r",
                  "    \"job\": pm.environment.get('updateJob')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                ],
                "_lastExecutionId": "f8198e4b-b5d4-4d99-bc1e-b7ba86111bc1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "2"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ff728f0a-6537-4ce0-9013-8d228890f832",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "24",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":null,\"job\":null}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "a2731213-32ff-4bd2-bc2a-e90011a1ac59",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:48 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"3f-ORZB1MnpOg2IHyeZ+L1tswatcvw\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=Ie6Jp2bKqxT8UNeqOfLNXE6ca4Sen9tJ6RBM7TVnkaPHNeuDgVd8IxJjnumGcjn5LEPWlBc4tpHEEIx0Ak27jysldFDvhVQMcPdi%2BBVvq9%2FhMpy84k%2FpgIpKaQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2d8cbd45758-IAD"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              49,
              58,
              52,
              56,
              46,
              55,
              54,
              48,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 219,
          "responseSize": 63
        },
        "id": "a127de3c-1f85-4b31-9df6-70cd4ed3b90c",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verify user infos is updated as expectation.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a811f3c9-430d-4358-a354-a2a6207b9bff",
          "length": 5,
          "cycles": 6,
          "position": 0,
          "iteration": 2,
          "cr": true,
          "httpRequestId": "41d42b50-9384-44b6-8963-b66870688e0d"
        },
        "item": {
          "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "21b7711d-122e-49ee-87a0-eb21e3c7e43b",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "514460fc-e509-4643-8970-bf43c9227e7f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2fbd3d41-e4e4-49de-b5aa-7143b8460116",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "2eceb69b-7cf4-4e55-9dd2-09476ccbf31a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:49 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=HDI4DMCWNXkXRU91jf130Sy2V2LwnXekr7%2FksDyHbADTsFDVQl4mpz5FVVvGXSFk1DZYdY8XlkWCNdizAZlkiiZSGwMslCBDAEimqgmqmLKCmIbKAygULgguLQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2da7e235758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 224,
          "responseSize": 29
        },
        "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c709b3b4-f130-4fd4-9035-4927edd1a8a8",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "57adcce7-322a-48ac-a44b-dce853218b58"
        },
        "item": {
          "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1e154e16-9f60-4f55-8ac0-b9c4cd59d59f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "1c1d3659-a7b4-4ca0-aded-886c8a018038"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "63933eec-e1bb-4171-b5a8-33bbd8b74577",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "65ee405c-5319-4c4b-a7f2-b1123fe410d8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "2"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "52e79eb3-b334-4065-8881-ba332b078b1a",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "ff24c982-0516-4e62-af74-667480ff4fd0",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:49 GMT"
            },
            {
              "key": "Content-Length",
              "value": "0"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=E5y5gx%2Fuxyxkw8JiRTFqhOG%2F%2BsQhSpY6AZmqqKUzDWKGdkwkg8dwqp%2BfIhdAn9i0pwk50hyDWMOmYZKi2M1keHEbmqo7%2B8Fq0ry3bxzcrIA8gn%2BpcJ16Jz46Ig%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2dc48895758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 216,
          "responseSize": 0
        },
        "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
        "assertions": [
          {
            "assertion": "Verify status code is 204",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b5afb0f8-b367-4127-b8bf-f8f56bfb4604",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "33ff0426-d8af-47ad-a8f8-233bbfbc2f7d"
        },
        "item": {
          "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1e154e16-9f60-4f55-8ac0-b9c4cd59d59f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "1c1d3659-a7b4-4ca0-aded-886c8a018038"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "63933eec-e1bb-4171-b5a8-33bbd8b74577",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "65ee405c-5319-4c4b-a7f2-b1123fe410d8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              ""
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "011acadb-3ae2-4470-91a3-54f6718ca51f",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "bce94efb-8d0e-4e68-8d9f-ddc6b8a9745b",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:49 GMT"
            },
            {
              "key": "Content-Length",
              "value": "0"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=YPU8iWCYv9H1P7j6587rsDDofgMJnQdBDSWDBF%2BSu72dGfxqSmOdc4DS0bQr07Xb2zvk5o44ZSGstsNmz%2FlNPSlebUrqEN6TFGOMxBEUPk5%2BLPU2vQmAffAZAQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2ddea965758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 209,
          "responseSize": 0
        },
        "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Verify status code is 404",
              "message": "expected response to have status code 404 but got 204",
              "stack": "AssertionError: expected response to have status code 404 but got 204\n   at Object.eval sandbox-script.js:1:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b4730d90-7b26-4c7b-90c5-9b13984f1045",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "e16beadb-e5f0-455d-a858-72d289cc35e3"
        },
        "item": {
          "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1e154e16-9f60-4f55-8ac0-b9c4cd59d59f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "1c1d3659-a7b4-4ca0-aded-886c8a018038"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "63933eec-e1bb-4171-b5a8-33bbd8b74577",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "65ee405c-5319-4c4b-a7f2-b1123fe410d8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "23"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1e6f7891-f6b8-4da2-b862-29cb21ee63ad",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "1ccb2b3a-db4e-48b2-b157-1ac49f51391f",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:49 GMT"
            },
            {
              "key": "Content-Length",
              "value": "0"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=FN%2FaSj1e9rlMMQqQHoc1V9TjGD5gb0d0Mq19%2F6w2PDzkxJekrSaxlac6lyRXjk5H%2F7ZWjs5zT0vt54VQIRHzBhmv0m3bPJX1rxGxy3M8G%2FCbSZSMCGEv78SNPA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2df7cd75758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 217,
          "responseSize": 0
        },
        "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Verify status code is 404",
              "message": "expected response to have status code 404 but got 204",
              "stack": "AssertionError: expected response to have status code 404 but got 204\n   at Object.eval sandbox-script.js:1:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "6efcbb97-a5d1-41e8-afd3-18a4a7ceb39e",
          "length": 5,
          "cycles": 6,
          "position": 0,
          "iteration": 3,
          "cr": true,
          "httpRequestId": "162b19db-d25c-4f02-a9f5-4c3dcb4557b6"
        },
        "item": {
          "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "21b7711d-122e-49ee-87a0-eb21e3c7e43b",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "514460fc-e509-4643-8970-bf43c9227e7f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9f17ed49-fcb4-441d-83bb-01ddeb4ded3f",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "038a2e7d-dc5b-4be5-83ba-c03dbf0c9c63",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:50 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=j%2BJuCJDZvusXrjTHlYFjC0IE4mjCw9hzqwu13x7EbUO7AqmF1DKbKuWsry%2FN6STYxjmhZixO5cYDuBBhFGHK5LrDtAPvIOuATMHVovasLCGbCCw7PDLaylx6Lw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2e10f625758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 211,
          "responseSize": 29
        },
        "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "26cf894a-233a-4ad9-8c63-f227e436d80b",
          "length": 5,
          "cycles": 6,
          "position": 4,
          "iteration": 3,
          "httpRequestId": "61b4e957-9a8f-4f5b-ba89-cc46377bd82a"
        },
        "item": {
          "id": "3e4376c6-6a02-4839-aba5-7d8d3be513ea",
          "name": "Get User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1caf4a30-4e56-4693-a996-fd1bb2cc9f0a",
                "type": "text/javascript",
                "exec": [
                  "let statusCode = pm.environment.get(\"statusCode\");",
                  "",
                  "pm.test(`Verify status code is ${statusCode}`, function () {",
                  "    pm.response.to.have.status(statusCode);",
                  "})"
                ],
                "_lastExecutionId": "9ed76e2f-7ba1-40e8-8599-cc5c1115511e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "fdf6f84c-01af-45c1-946c-24e60f365276",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                ],
                "_lastExecutionId": "24adb4da-2621-4eed-82fd-bacc92919161"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "3"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5553f00d-7e80-4d93-b312-42ac43fe2557",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7570c3e4-7bca-4afe-bfee-6988cce14951",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:50 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"112-EeInfgHWtnxhYRnwgZUB667e024\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=14400"
            },
            {
              "key": "CF-Cache-Status",
              "value": "HIT"
            },
            {
              "key": "Age",
              "value": "84"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=dCM9gO8OI78Vr%2BIeXPUz8E6fTyMZGcoojooQFUvodIZCHXd%2BkegOEXIK%2BJuif4JuRGjwYQSYcaf%2Fk1DgSM5RSP1JZVQ2WAJnVv5EyEN%2BLznXzH9XdeNit3UB5g%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2e2b9b35758-IAD"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              51,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              101,
              109,
              109,
              97,
              46,
              119,
              111,
              110,
              103,
              64,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              34,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              69,
              109,
              109,
              97,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              87,
              111,
              110,
              103,
              34,
              44,
              34,
              97,
              118,
              97,
              116,
              97,
              114,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              47,
              105,
              109,
              103,
              47,
              102,
              97,
              99,
              101,
              115,
              47,
              51,
              45,
              105,
              109,
              97,
              103,
              101,
              46,
              106,
              112,
              103,
              34,
              125,
              44,
              34,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              34,
              58,
              123,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              47,
              35,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              45,
              104,
              101,
              97,
              100,
              105,
              110,
              103,
              34,
              44,
              34,
              116,
              101,
              120,
              116,
              34,
              58,
              34,
              84,
              111,
              32,
              107,
              101,
              101,
              112,
              32,
              82,
              101,
              113,
              82,
              101,
              115,
              32,
              102,
              114,
              101,
              101,
              44,
              32,
              99,
              111,
              110,
              116,
              114,
              105,
              98,
              117,
              116,
              105,
              111,
              110,
              115,
              32,
              116,
              111,
              119,
              97,
              114,
              100,
              115,
              32,
              115,
              101,
              114,
              118,
              101,
              114,
              32,
              99,
              111,
              115,
              116,
              115,
              32,
              97,
              114,
              101,
              32,
              97,
              112,
              112,
              114,
              101,
              99,
              105,
              97,
              116,
              101,
              100,
              33,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 13,
          "responseSize": 274
        },
        "id": "3e4376c6-6a02-4839-aba5-7d8d3be513ea",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1ba2908b-4802-415e-800d-91da78942229",
          "length": 5,
          "cycles": 6,
          "position": 4,
          "iteration": 3,
          "httpRequestId": "06af9e9b-1421-41e1-b9eb-0be61205c8dd"
        },
        "item": {
          "id": "3e4376c6-6a02-4839-aba5-7d8d3be513ea",
          "name": "Get User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1caf4a30-4e56-4693-a996-fd1bb2cc9f0a",
                "type": "text/javascript",
                "exec": [
                  "let statusCode = pm.environment.get(\"statusCode\");",
                  "",
                  "pm.test(`Verify status code is ${statusCode}`, function () {",
                  "    pm.response.to.have.status(statusCode);",
                  "})"
                ],
                "_lastExecutionId": "9ed76e2f-7ba1-40e8-8599-cc5c1115511e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "fdf6f84c-01af-45c1-946c-24e60f365276",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                ],
                "_lastExecutionId": "24adb4da-2621-4eed-82fd-bacc92919161"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "23"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "17e1ab64-c820-4232-a84a-f81671679b5a",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7a80fe8c-858e-45d0-9c00-9c76c6c1a385",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:50 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=14400"
            },
            {
              "key": "CF-Cache-Status",
              "value": "HIT"
            },
            {
              "key": "Age",
              "value": "86"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=gAR5MMxdHzR%2B3D0rtwE9Vite8XBsCajEWY53tMoAkROo2oAQoHuVA134EdzWBjFS21ixtoX%2BlKfTzkddElaoITqP%2Fz%2FukPHWvpTUGnh2laSwtu0Bo5z0%2FN57Zw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2e31a4c5758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              125
            ]
          },
          "cookie": [],
          "responseTime": 16,
          "responseSize": 2
        },
        "id": "3e4376c6-6a02-4839-aba5-7d8d3be513ea",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "61cb0ec1-733c-43ee-83ad-66b188fa9f07",
          "length": 5,
          "cycles": 6,
          "position": 4,
          "iteration": 3,
          "httpRequestId": "1b92a0b4-b6e7-45b2-92c2-d7d80cf5cceb"
        },
        "item": {
          "id": "3e4376c6-6a02-4839-aba5-7d8d3be513ea",
          "name": "Get User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1caf4a30-4e56-4693-a996-fd1bb2cc9f0a",
                "type": "text/javascript",
                "exec": [
                  "let statusCode = pm.environment.get(\"statusCode\");",
                  "",
                  "pm.test(`Verify status code is ${statusCode}`, function () {",
                  "    pm.response.to.have.status(statusCode);",
                  "})"
                ],
                "_lastExecutionId": "9ed76e2f-7ba1-40e8-8599-cc5c1115511e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "fdf6f84c-01af-45c1-946c-24e60f365276",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                ],
                "_lastExecutionId": "24adb4da-2621-4eed-82fd-bacc92919161"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "null"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a9545ca6-f929-474d-a0a2-afe84efbbe65",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "bc4c648c-5a18-410c-93c7-477260ae1b6b",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:50 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "BYPASS"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=sZkLhVc96dL7BQFyiZhEB0BMUy3o23MKlboQUMzxeHui%2FByn4R6HMVRkb0sYW5Az1iZr8d0BZ34U6WENAVvnEjZbd6d%2BPjVsVgyXxYDy9rQXzkKxN%2ByZu%2FlLaQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2e37ae75758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              125
            ]
          },
          "cookie": [],
          "responseTime": 194,
          "responseSize": 2
        },
        "id": "3e4376c6-6a02-4839-aba5-7d8d3be513ea",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1bc3250d-3ef8-4c2c-819d-758f80e402d0",
          "length": 5,
          "cycles": 6,
          "position": 0,
          "iteration": 4,
          "cr": true,
          "httpRequestId": "75982c5e-884a-4398-81fd-eca8888184e1"
        },
        "item": {
          "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "21b7711d-122e-49ee-87a0-eb21e3c7e43b",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "514460fc-e509-4643-8970-bf43c9227e7f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3d3fcef3-5080-4ff3-8513-b34b446282f1",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "78a58422-d409-4665-88f9-a654b831dd60",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:50 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=o424WLcFZvHn2B3RENqwn0DIjpDlSgIrqYwdHacZMT9bPwpgpev1Sa3mDV1DvyZ7e3Z4jsejlOESWeKYR3z8CfLnsSnWqRUFcLpcfBY9qDRDwtjXsGYm%2BgqW%2FA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2e4ecf65758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 199,
          "responseSize": 29
        },
        "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "778a55b5-5753-45de-b14d-7cddbcedd635",
          "length": 5,
          "cycles": 6,
          "position": 1,
          "iteration": 4,
          "httpRequestId": "0ac6978a-8c2f-4ba6-b8ab-0f6df4c9fa16"
        },
        "item": {
          "id": "fdb2fc29-698d-435a-b06f-4f9ca607d3c5",
          "name": "Create User",
          "request": {
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8ebca6ec-72f4-4b2d-ae99-ce0988983ab3",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify correct user infos is created.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "})",
                  "",
                  "pm.environment.set(\"userId\", pm.response.json().id);",
                  ""
                ],
                "_lastExecutionId": "aba4abfd-ebd5-4587-b122-68a106aefdfc"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7075d2f3-9d52-459b-88fe-2518167cb705",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('name'),\r",
                  "    \"job\": pm.environment.get('job')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                ],
                "_lastExecutionId": "db2e6a6b-a185-4fd6-a7b5-26cddce7b512"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7a8ba11a-43ed-4ab7-b953-b9cd91ad4d79",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "36",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"morpheus1\",\"job\":\"leader1\"}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "f777659d-987f-466a-86f8-8166c0181c17",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:50 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "86"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"56-FDKyVXluzGRMGLrXPkdFx7RF9kI\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=dKWC1iPI3CfkdRxuOhxYyFipWB6te%2FaLntrCMtPdZ0%2BWOCPAyQ%2BP%2Bg4xSCj9zwVeTOiMp5N5blEbONKGKghuFQ8zVRsvj5vClZjJXTkihql5WyZPpi4vWcdk4Q%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2e67f215758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              109,
              111,
              114,
              112,
              104,
              101,
              117,
              115,
              49,
              34,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              34,
              108,
              101,
              97,
              100,
              101,
              114,
              49,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              52,
              53,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              49,
              58,
              53,
              48,
              46,
              57,
              52,
              56,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 205,
          "responseSize": 86
        },
        "id": "fdb2fc29-698d-435a-b06f-4f9ca607d3c5",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "Verify correct user infos is created.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "07122293-e3cb-45b6-b7c1-201aa2398e7b",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 4,
          "httpRequestId": "ab4519b3-1c1f-4234-8de7-002b7052af9f"
        },
        "item": {
          "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1e154e16-9f60-4f55-8ac0-b9c4cd59d59f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "1c1d3659-a7b4-4ca0-aded-886c8a018038"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "63933eec-e1bb-4171-b5a8-33bbd8b74577",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "65ee405c-5319-4c4b-a7f2-b1123fe410d8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "145"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "37a036ef-3ee3-4d27-91c2-e76104a4bd02",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "daa07598-f036-4781-8194-dd3d4e11dc6d",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:51 GMT"
            },
            {
              "key": "Content-Length",
              "value": "0"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=civE2DS4UFz2zmtuk2wDTR03iJKpXisE%2B2Zq5c2fTMbwp8CUjfHhFz1O25l%2FFdAi0vmHS0TCATGDyzKCJ4NAlWZc2LW6cDebcyHs%2BcGpNL63qucFlPhZ7y7%2Big%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2e808ea5758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 209,
          "responseSize": 0
        },
        "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
        "assertions": [
          {
            "assertion": "Verify status code is 204",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e1b29577-9821-4f3f-8a35-737bf7e78cb5",
          "length": 5,
          "cycles": 6,
          "position": 4,
          "iteration": 4,
          "httpRequestId": "307f4d06-d70e-4639-b5fa-ec8dc26439ed"
        },
        "item": {
          "id": "3e4376c6-6a02-4839-aba5-7d8d3be513ea",
          "name": "Get User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1caf4a30-4e56-4693-a996-fd1bb2cc9f0a",
                "type": "text/javascript",
                "exec": [
                  "let statusCode = pm.environment.get(\"statusCode\");",
                  "",
                  "pm.test(`Verify status code is ${statusCode}`, function () {",
                  "    pm.response.to.have.status(statusCode);",
                  "})"
                ],
                "_lastExecutionId": "9ed76e2f-7ba1-40e8-8599-cc5c1115511e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "fdf6f84c-01af-45c1-946c-24e60f365276",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                ],
                "_lastExecutionId": "24adb4da-2621-4eed-82fd-bacc92919161"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "145"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4e5053e2-8d8d-4822-b65b-2b84c057daaf",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "4893374e-6d4e-421a-a8c9-45e0de575963",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:51 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "BYPASS"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=CC2%2FE6amb5lmFyzwqmyfZy%2FU7exdkjmbYm5VevK5C1Axs%2F8VpFgdtd8V2TGRl%2B3pTNxfBhqEHQdDRSjVjljrlB9dCElaWn%2Bp2mMr1jAXsgrcJpncxQz5twq5mg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2e9ab135758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              125
            ]
          },
          "cookie": [],
          "responseTime": 214,
          "responseSize": 2
        },
        "id": "3e4376c6-6a02-4839-aba5-7d8d3be513ea",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cc972d1a-292d-4bb2-9d73-ca96319845c3",
          "length": 5,
          "cycles": 6,
          "position": 0,
          "iteration": 5,
          "cr": true,
          "httpRequestId": "0482209a-06ba-4b54-9399-ee9d097cf495"
        },
        "item": {
          "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "login"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "21b7711d-122e-49ee-87a0-eb21e3c7e43b",
                "type": "text/javascript",
                "exec": [
                  "const responseSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"token\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"token\"]",
                  "};",
                  "",
                  "pm.test(\"Verify status code is 200.\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify response body has correct schema.\", function () {",
                  "    pm.response.to.have.jsonSchema(responseSchema);",
                  "});",
                  "",
                  "pm.environment.set(\"token\", pm.response.json().token);",
                  ""
                ],
                "_lastExecutionId": "514460fc-e509-4643-8970-bf43c9227e7f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "76bec09b-9ffe-4232-8277-217b59a49e81",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          }
        },
        "response": {
          "id": "5351db2e-1084-44a8-b713-8697ae8e4c4c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:51 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=MCLD2g1ECP72BhE694o1FN%2BHaBWcRU4PjusVsgqG0wdcOe7Pw4YW8zDbeNeXl38kyNNvUGpBOxYzZaUwhhy6nWULDrg7369zin5IhV%2FMeJCwxObLgz5Q57loww%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2eb3cfe5758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              81,
              112,
              119,
              76,
              53,
              116,
              107,
              101,
              52,
              80,
              110,
              112,
              106,
              97,
              55,
              88,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 214,
          "responseSize": 29
        },
        "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
        "assertions": [
          {
            "assertion": "Verify status code is 200.",
            "skipped": false
          },
          {
            "assertion": "Verify response body has correct schema.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "01e67956-7648-4d34-a78f-1ea43a73565d",
          "length": 5,
          "cycles": 6,
          "position": 1,
          "iteration": 5,
          "httpRequestId": "daae1aed-5c36-4f34-8678-d92dfb1de443"
        },
        "item": {
          "id": "fdb2fc29-698d-435a-b06f-4f9ca607d3c5",
          "name": "Create User",
          "request": {
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8ebca6ec-72f4-4b2d-ae99-ce0988983ab3",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify correct user infos is created.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "})",
                  "",
                  "pm.environment.set(\"userId\", pm.response.json().id);",
                  ""
                ],
                "_lastExecutionId": "aba4abfd-ebd5-4587-b122-68a106aefdfc"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7075d2f3-9d52-459b-88fe-2518167cb705",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('name'),\r",
                  "    \"job\": pm.environment.get('job')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                ],
                "_lastExecutionId": "db2e6a6b-a185-4fd6-a7b5-26cddce7b512"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "95d4740d-8117-4aca-babf-80be199afb5b",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "34",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"morpheus\",\"job\":\"leader\"}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6c677125-90df-4e52-ab0d-7a9f62789f3a",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:52 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "84"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"54-JtdbSIdAFW7rXMx9vaE0GKahI7w\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=dH%2B8%2BfLStbuobj9jUUM%2BCZDT1oNU9jbb%2BHO1pBQ4v0MhFYViIV3Yk9VYisznsMqfE2HhXVT4CRm2%2BD94gO%2F9PL9scwpLfL8XujYj4wXKV8a6deQOWd1iEP9dWg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2ecff975758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              109,
              111,
              114,
              112,
              104,
              101,
              117,
              115,
              34,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              34,
              108,
              101,
              97,
              100,
              101,
              114,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              55,
              48,
              49,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              49,
              58,
              53,
              49,
              46,
              57,
              56,
              55,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 207,
          "responseSize": 84
        },
        "id": "fdb2fc29-698d-435a-b06f-4f9ca607d3c5",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "Verify correct user infos is created.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ee73791a-343a-40ba-a8af-119f1e96e9cb",
          "length": 5,
          "cycles": 6,
          "position": 2,
          "iteration": 5,
          "httpRequestId": "5e059554-b163-418c-bc6a-901ae920a649"
        },
        "item": {
          "id": "a127de3c-1f85-4b31-9df6-70cd4ed3b90c",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9e97ec12-da47-4dd3-aa40-5b1a22892897",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "});"
                ],
                "_lastExecutionId": "3d69136e-2971-486a-b9d1-2c63a0616fef"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "1dee425d-4af5-4d9b-ba0b-afda8d17d03a",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('updateName'),\r",
                  "    \"job\": pm.environment.get('updateJob')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                ],
                "_lastExecutionId": "f8198e4b-b5d4-4d99-bc1e-b7ba86111bc1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "701"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2bbb7597-50f6-47df-97aa-8e7d68ec1f07",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "36",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"morpheus2\",\"job\":\"leader2\"}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3e3949e3-17a6-4f9d-a3ef-ca785b2b9664",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:52 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"4b-8TdEMXYUDsdPhA8hlvxD+Omv1GQ\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=VxSPYrsfmlkoW5xiCvwk0wBODFOBmkNpRjX4%2FXN5L7e1orHqe0kB%2FbzpNB%2Fgw2HKZJj3orvyxneihKyl4B7NNX4RNDlE2%2BkrssSpWlaHaLYq%2FpycJHuMvG2kLQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2ee89c65758-IAD"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              109,
              111,
              114,
              112,
              104,
              101,
              117,
              115,
              50,
              34,
              44,
              34,
              106,
              111,
              98,
              34,
              58,
              34,
              108,
              101,
              97,
              100,
              101,
              114,
              50,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              50,
              45,
              48,
              56,
              45,
              50,
              49,
              84,
              49,
              54,
              58,
              51,
              49,
              58,
              53,
              50,
              46,
              50,
              51,
              57,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 209,
          "responseSize": 75
        },
        "id": "a127de3c-1f85-4b31-9df6-70cd4ed3b90c",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verify user infos is updated as expectation.",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a6ec2ce8-60a1-4745-b6e3-def63e27e3a1",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 5,
          "httpRequestId": "b9e49bf3-bb3b-4377-b188-68b50efc451b"
        },
        "item": {
          "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1e154e16-9f60-4f55-8ac0-b9c4cd59d59f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "1c1d3659-a7b4-4ca0-aded-886c8a018038"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "63933eec-e1bb-4171-b5a8-33bbd8b74577",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "65ee405c-5319-4c4b-a7f2-b1123fe410d8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "701"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "dc768b22-b674-40c7-baca-61116d7e9716",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "b1fd2d46-d528-4fe1-b4cd-6cdec25b8a87",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:52 GMT"
            },
            {
              "key": "Content-Length",
              "value": "0"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=hO%2FcxwTftOM6067GGhcW9ZUH1fKm38XUiNV7ylwmYuBHgEIVg%2Fb0SugYM3vS%2FtDFWayei1srzcWZy2Nr4Kad%2Ba3FRLy7TWimQ%2Fto8vjbOifOrzBmslzkKjSwuQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2f02c0d5758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 197,
          "responseSize": 0
        },
        "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
        "assertions": [
          {
            "assertion": "Verify status code is 204",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9df28509-42db-418d-a76e-ac617c6ae677",
          "length": 5,
          "cycles": 6,
          "position": 4,
          "iteration": 5,
          "httpRequestId": "a9d43c9e-c1e7-468a-bdfa-520cee7fb40e"
        },
        "item": {
          "id": "3e4376c6-6a02-4839-aba5-7d8d3be513ea",
          "name": "Get User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1caf4a30-4e56-4693-a996-fd1bb2cc9f0a",
                "type": "text/javascript",
                "exec": [
                  "let statusCode = pm.environment.get(\"statusCode\");",
                  "",
                  "pm.test(`Verify status code is ${statusCode}`, function () {",
                  "    pm.response.to.have.status(statusCode);",
                  "})"
                ],
                "_lastExecutionId": "9ed76e2f-7ba1-40e8-8599-cc5c1115511e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "fdf6f84c-01af-45c1-946c-24e60f365276",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                ],
                "_lastExecutionId": "24adb4da-2621-4eed-82fd-bacc92919161"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users",
              "701"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer QpwL5tke4Pnpja7X4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0aad7ed7-19a6-4e04-9486-40df72ef7248",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "QpwL5tke4Pnpja7X4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "78f1e219-e59f-4ccb-b316-932152a65446",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Sun, 21 Aug 2022 16:31:52 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "BYPASS"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=y9ixdIxsYh84XD6%2FRrRQIZOd8%2BBRjVsD4Zx3bjwLdNVZmYPgVNkj5VTxsLLhfKVSUe1eoQkyhoZDlDJu43YowfUeDGSMZ6kMnODdGBHHaeaLFZ9%2F2h9XHBHtgw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "73e4c2f19e4c5758-IAD"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              125
            ]
          },
          "cookie": [],
          "responseTime": 190,
          "responseSize": 2
        },
        "id": "3e4376c6-6a02-4839-aba5-7d8d3be513ea",
        "assertions": [
          {
            "assertion": "Verify status code is 404",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 1128
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Verify status code is 404",
          "message": "expected response to have status code 404 but got 200",
          "stack": "AssertionError: expected response to have status code 404 but got 200\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "b375d5125924102d80d07a96cd86aefc",
          "id": "554f551d-968e-441c-9f36-4a7b98dbf27e",
          "timestamp": 1661099508556,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "a127de3c-1f85-4b31-9df6-70cd4ed3b90c",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{requestBody}}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9e97ec12-da47-4dd3-aa40-5b1a22892897",
                "type": "text/javascript",
                "exec": [
                  "const expectedObject = JSON.parse(pm.request.body.raw);",
                  "",
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "});",
                  "",
                  "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                  "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                  "});"
                ],
                "_lastExecutionId": "3d69136e-2971-486a-b9d1-2c63a0616fef"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "1dee425d-4af5-4d9b-ba0b-afda8d17d03a",
                "type": "text/javascript",
                "exec": [
                  "let requestBody = {\r",
                  "    \"name\": pm.environment.get('updateName'),\r",
                  "    \"job\": pm.environment.get('updateJob')\r",
                  "}\r",
                  "\r",
                  "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                  "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                ],
                "_lastExecutionId": "f8198e4b-b5d4-4d99-bc1e-b7ba86111bc1"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b"
          },
          "item": [
            {
              "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
              "name": "Login",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "login"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
                  "options": {
                    "raw": {
                      "language": "text"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "21b7711d-122e-49ee-87a0-eb21e3c7e43b",
                    "type": "text/javascript",
                    "exec": [
                      "const responseSchema = {",
                      "    \"type\": \"object\",",
                      "    \"properties\": {",
                      "        \"token\": { \"type\": \"string\" }",
                      "    },",
                      "    \"required\": [\"token\"]",
                      "};",
                      "",
                      "pm.test(\"Verify status code is 200.\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Verify response body has correct schema.\", function () {",
                      "    pm.response.to.have.jsonSchema(responseSchema);",
                      "});",
                      "",
                      "pm.environment.set(\"token\", pm.response.json().token);",
                      ""
                    ],
                    "_lastExecutionId": "514460fc-e509-4643-8970-bf43c9227e7f"
                  }
                }
              ]
            },
            {
              "id": "fdb2fc29-698d-435a-b06f-4f9ca607d3c5",
              "name": "Create User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8ebca6ec-72f4-4b2d-ae99-ce0988983ab3",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify correct user infos is created.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "})",
                      "",
                      "pm.environment.set(\"userId\", pm.response.json().id);",
                      ""
                    ],
                    "_lastExecutionId": "aba4abfd-ebd5-4587-b122-68a106aefdfc"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7075d2f3-9d52-459b-88fe-2518167cb705",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('name'),\r",
                      "    \"job\": pm.environment.get('job')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "db2e6a6b-a185-4fd6-a7b5-26cddce7b512"
                  }
                }
              ]
            },
            {
              "id": "a127de3c-1f85-4b31-9df6-70cd4ed3b90c",
              "name": "Update User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}"
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e97ec12-da47-4dd3-aa40-5b1a22892897",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "});"
                    ],
                    "_lastExecutionId": "3d69136e-2971-486a-b9d1-2c63a0616fef"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1dee425d-4af5-4d9b-ba0b-afda8d17d03a",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('updateName'),\r",
                      "    \"job\": pm.environment.get('updateJob')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "f8198e4b-b5d4-4d99-bc1e-b7ba86111bc1"
                  }
                }
              ]
            },
            {
              "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
              "name": "Delete User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1e154e16-9f60-4f55-8ac0-b9c4cd59d59f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "})"
                    ],
                    "_lastExecutionId": "1c1d3659-a7b4-4ca0-aded-886c8a018038"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "63933eec-e1bb-4171-b5a8-33bbd8b74577",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "65ee405c-5319-4c4b-a7f2-b1123fe410d8"
                  }
                }
              ]
            },
            {
              "id": "3e4376c6-6a02-4839-aba5-7d8d3be513ea",
              "name": "Get User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1caf4a30-4e56-4693-a996-fd1bb2cc9f0a",
                    "type": "text/javascript",
                    "exec": [
                      "let statusCode = pm.environment.get(\"statusCode\");",
                      "",
                      "pm.test(`Verify status code is ${statusCode}`, function () {",
                      "    pm.response.to.have.status(statusCode);",
                      "})"
                    ],
                    "_lastExecutionId": "9ed76e2f-7ba1-40e8-8599-cc5c1115511e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdf6f84c-01af-45c1-946c-24e60f365276",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "24adb4da-2621-4eed-82fd-bacc92919161"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "33c3b133-ee29-4363-bd8a-8e5d5b0f156f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "e5588e25-78ee-4ba5-bc9e-df11a1ffd6a9"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a74aebf9-008d-4b22-bf2c-9710c7b332ab",
                "type": "text/javascript",
                "exec": [
                  "postman.setNextRequest(getNextRequest());",
                  "",
                  "function getNextRequest() {",
                  "    let requests;",
                  "    let dataset;",
                  "    let nextDataset;",
                  "    let nextRequest;",
                  "",
                  "    if(Array.isArray(pm.globals.get(\"remainingDataset\")) === true ){",
                  "        dataset = pm.globals.get(\"remainingDataset\");",
                  "    } else {",
                  "        dataset = pm.iterationData.get(\"dataset\");",
                  "        if (dataset === undefined)",
                  "            pm.globals.set(\"remainingDataset\", []);",
                  "    }",
                  "",
                  "    let remainingRequests = pm.globals.get(\"remainingRequests\");",
                  "    if(Array.isArray(remainingRequests) === true ){",
                  "        requests = pm.globals.get(\"remainingRequests\");",
                  "    } else {",
                  "        requests = pm.iterationData.get(\"requests\");    ",
                  "    }",
                  "",
                  "    if(dataset && dataset.length > 0 && (remainingRequests === undefined || remainingRequests.length ===0)) {",
                  "        nextDataset = dataset.shift();",
                  "        pm.globals.set(\"remainingDataset\", dataset);",
                  "        for (const [key, value] of Object.entries(nextDataset)) {",
                  "            pm.environment.set(key, value);",
                  "        }",
                  "        requests = pm.iterationData.get(\"requests\");",
                  "    }",
                  "",
                  "    nextRequest = requests.shift();",
                  "    pm.globals.set(\"remainingRequests\", requests);",
                  "",
                  "    if(nextRequest === undefined && nextDataset === undefined){",
                  "        pm.globals.clear(\"remainingRequests\");",
                  "        pm.globals.clear(\"remainingDataset\");",
                  "        return null;",
                  "    }",
                  "",
                  "    return nextRequest;",
                  "}"
                ],
                "_lastExecutionId": "e4d8d4ed-3cfa-4d10-a5a5-caa64845d5c9"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b",
            "name": "API Testing",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "33cb360a-aade-49a6-8822-75d5618ad3f5",
          "length": 5,
          "cycles": 6,
          "position": 2,
          "iteration": 1,
          "httpRequestId": "bd24743a-c707-460d-951b-fc5d116b1199",
          "scriptId": "9e97ec12-da47-4dd3-aa40-5b1a22892897",
          "execution": "ea8d6f0b-1d4f-4752-9938-0b990a13b666"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Verify status code is 404",
          "message": "expected response to have status code 404 but got 204",
          "stack": "AssertionError: expected response to have status code 404 but got 204\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "20c5b882ef4a771ed279e97dc16ed51a",
          "id": "eaa58af8-b078-4fa6-ab66-9a11b9ce6b48",
          "timestamp": 1661099509639,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1e154e16-9f60-4f55-8ac0-b9c4cd59d59f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "1c1d3659-a7b4-4ca0-aded-886c8a018038"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "63933eec-e1bb-4171-b5a8-33bbd8b74577",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "65ee405c-5319-4c4b-a7f2-b1123fe410d8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b"
          },
          "item": [
            {
              "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
              "name": "Login",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "login"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
                  "options": {
                    "raw": {
                      "language": "text"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "21b7711d-122e-49ee-87a0-eb21e3c7e43b",
                    "type": "text/javascript",
                    "exec": [
                      "const responseSchema = {",
                      "    \"type\": \"object\",",
                      "    \"properties\": {",
                      "        \"token\": { \"type\": \"string\" }",
                      "    },",
                      "    \"required\": [\"token\"]",
                      "};",
                      "",
                      "pm.test(\"Verify status code is 200.\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Verify response body has correct schema.\", function () {",
                      "    pm.response.to.have.jsonSchema(responseSchema);",
                      "});",
                      "",
                      "pm.environment.set(\"token\", pm.response.json().token);",
                      ""
                    ],
                    "_lastExecutionId": "514460fc-e509-4643-8970-bf43c9227e7f"
                  }
                }
              ]
            },
            {
              "id": "fdb2fc29-698d-435a-b06f-4f9ca607d3c5",
              "name": "Create User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8ebca6ec-72f4-4b2d-ae99-ce0988983ab3",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify correct user infos is created.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "})",
                      "",
                      "pm.environment.set(\"userId\", pm.response.json().id);",
                      ""
                    ],
                    "_lastExecutionId": "aba4abfd-ebd5-4587-b122-68a106aefdfc"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7075d2f3-9d52-459b-88fe-2518167cb705",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('name'),\r",
                      "    \"job\": pm.environment.get('job')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "db2e6a6b-a185-4fd6-a7b5-26cddce7b512"
                  }
                }
              ]
            },
            {
              "id": "a127de3c-1f85-4b31-9df6-70cd4ed3b90c",
              "name": "Update User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}"
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e97ec12-da47-4dd3-aa40-5b1a22892897",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "});"
                    ],
                    "_lastExecutionId": "3d69136e-2971-486a-b9d1-2c63a0616fef"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1dee425d-4af5-4d9b-ba0b-afda8d17d03a",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('updateName'),\r",
                      "    \"job\": pm.environment.get('updateJob')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "f8198e4b-b5d4-4d99-bc1e-b7ba86111bc1"
                  }
                }
              ]
            },
            {
              "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
              "name": "Delete User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1e154e16-9f60-4f55-8ac0-b9c4cd59d59f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "})"
                    ],
                    "_lastExecutionId": "1c1d3659-a7b4-4ca0-aded-886c8a018038"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "63933eec-e1bb-4171-b5a8-33bbd8b74577",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "65ee405c-5319-4c4b-a7f2-b1123fe410d8"
                  }
                }
              ]
            },
            {
              "id": "3e4376c6-6a02-4839-aba5-7d8d3be513ea",
              "name": "Get User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1caf4a30-4e56-4693-a996-fd1bb2cc9f0a",
                    "type": "text/javascript",
                    "exec": [
                      "let statusCode = pm.environment.get(\"statusCode\");",
                      "",
                      "pm.test(`Verify status code is ${statusCode}`, function () {",
                      "    pm.response.to.have.status(statusCode);",
                      "})"
                    ],
                    "_lastExecutionId": "9ed76e2f-7ba1-40e8-8599-cc5c1115511e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdf6f84c-01af-45c1-946c-24e60f365276",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "24adb4da-2621-4eed-82fd-bacc92919161"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "33c3b133-ee29-4363-bd8a-8e5d5b0f156f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "e5588e25-78ee-4ba5-bc9e-df11a1ffd6a9"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a74aebf9-008d-4b22-bf2c-9710c7b332ab",
                "type": "text/javascript",
                "exec": [
                  "postman.setNextRequest(getNextRequest());",
                  "",
                  "function getNextRequest() {",
                  "    let requests;",
                  "    let dataset;",
                  "    let nextDataset;",
                  "    let nextRequest;",
                  "",
                  "    if(Array.isArray(pm.globals.get(\"remainingDataset\")) === true ){",
                  "        dataset = pm.globals.get(\"remainingDataset\");",
                  "    } else {",
                  "        dataset = pm.iterationData.get(\"dataset\");",
                  "        if (dataset === undefined)",
                  "            pm.globals.set(\"remainingDataset\", []);",
                  "    }",
                  "",
                  "    let remainingRequests = pm.globals.get(\"remainingRequests\");",
                  "    if(Array.isArray(remainingRequests) === true ){",
                  "        requests = pm.globals.get(\"remainingRequests\");",
                  "    } else {",
                  "        requests = pm.iterationData.get(\"requests\");    ",
                  "    }",
                  "",
                  "    if(dataset && dataset.length > 0 && (remainingRequests === undefined || remainingRequests.length ===0)) {",
                  "        nextDataset = dataset.shift();",
                  "        pm.globals.set(\"remainingDataset\", dataset);",
                  "        for (const [key, value] of Object.entries(nextDataset)) {",
                  "            pm.environment.set(key, value);",
                  "        }",
                  "        requests = pm.iterationData.get(\"requests\");",
                  "    }",
                  "",
                  "    nextRequest = requests.shift();",
                  "    pm.globals.set(\"remainingRequests\", requests);",
                  "",
                  "    if(nextRequest === undefined && nextDataset === undefined){",
                  "        pm.globals.clear(\"remainingRequests\");",
                  "        pm.globals.clear(\"remainingDataset\");",
                  "        return null;",
                  "    }",
                  "",
                  "    return nextRequest;",
                  "}"
                ],
                "_lastExecutionId": "e4d8d4ed-3cfa-4d10-a5a5-caa64845d5c9"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b",
            "name": "API Testing",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "b5afb0f8-b367-4127-b8bf-f8f56bfb4604",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "33ff0426-d8af-47ad-a8f8-233bbfbc2f7d",
          "scriptId": "1e154e16-9f60-4f55-8ac0-b9c4cd59d59f",
          "execution": "16d63e40-3e27-440d-82a7-5ab9bfcd0cba"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Verify status code is 404",
          "message": "expected response to have status code 404 but got 204",
          "stack": "AssertionError: expected response to have status code 404 but got 204\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "20c5b882ef4a771ed279e97dc16ed51a",
          "id": "18162135-d686-4869-bb33-cbdb102903fc",
          "timestamp": 1661099509899,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
          "name": "Delete User",
          "request": {
            "url": {
              "path": [
                "api",
                "users",
                "{{userId}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1e154e16-9f60-4f55-8ac0-b9c4cd59d59f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                  "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                  "})"
                ],
                "_lastExecutionId": "1c1d3659-a7b4-4ca0-aded-886c8a018038"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "63933eec-e1bb-4171-b5a8-33bbd8b74577",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                ],
                "_lastExecutionId": "65ee405c-5319-4c4b-a7f2-b1123fe410d8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b"
          },
          "item": [
            {
              "id": "dc584847-24bc-4804-9901-8101f6cacd5f",
              "name": "Login",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "login"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
                  "options": {
                    "raw": {
                      "language": "text"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "21b7711d-122e-49ee-87a0-eb21e3c7e43b",
                    "type": "text/javascript",
                    "exec": [
                      "const responseSchema = {",
                      "    \"type\": \"object\",",
                      "    \"properties\": {",
                      "        \"token\": { \"type\": \"string\" }",
                      "    },",
                      "    \"required\": [\"token\"]",
                      "};",
                      "",
                      "pm.test(\"Verify status code is 200.\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Verify response body has correct schema.\", function () {",
                      "    pm.response.to.have.jsonSchema(responseSchema);",
                      "});",
                      "",
                      "pm.environment.set(\"token\", pm.response.json().token);",
                      ""
                    ],
                    "_lastExecutionId": "514460fc-e509-4643-8970-bf43c9227e7f"
                  }
                }
              ]
            },
            {
              "id": "fdb2fc29-698d-435a-b06f-4f9ca607d3c5",
              "name": "Create User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8ebca6ec-72f4-4b2d-ae99-ce0988983ab3",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify correct user infos is created.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "})",
                      "",
                      "pm.environment.set(\"userId\", pm.response.json().id);",
                      ""
                    ],
                    "_lastExecutionId": "aba4abfd-ebd5-4587-b122-68a106aefdfc"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7075d2f3-9d52-459b-88fe-2518167cb705",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('name'),\r",
                      "    \"job\": pm.environment.get('job')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('createUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "db2e6a6b-a185-4fd6-a7b5-26cddce7b512"
                  }
                }
              ]
            },
            {
              "id": "a127de3c-1f85-4b31-9df6-70cd4ed3b90c",
              "name": "Update User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{{requestBody}}"
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e97ec12-da47-4dd3-aa40-5b1a22892897",
                    "type": "text/javascript",
                    "exec": [
                      "const expectedObject = JSON.parse(pm.request.body.raw);",
                      "",
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "});",
                      "",
                      "pm.test(\"Verify user infos is updated as expectation.\", function () {",
                      "    pm.expect(pm.response.json()).to.deep.include(expectedObject);",
                      "});"
                    ],
                    "_lastExecutionId": "3d69136e-2971-486a-b9d1-2c63a0616fef"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1dee425d-4af5-4d9b-ba0b-afda8d17d03a",
                    "type": "text/javascript",
                    "exec": [
                      "let requestBody = {\r",
                      "    \"name\": pm.environment.get('updateName'),\r",
                      "    \"job\": pm.environment.get('updateJob')\r",
                      "}\r",
                      "\r",
                      "pm.environment.set(\"requestBody\", JSON.stringify(requestBody));\r",
                      "pm.environment.set(\"statusCode\", pm.environment.get('updateUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "f8198e4b-b5d4-4d99-bc1e-b7ba86111bc1"
                  }
                }
              ]
            },
            {
              "id": "ce0e18fc-bdb2-4eb0-a789-087aee8e7769",
              "name": "Delete User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1e154e16-9f60-4f55-8ac0-b9c4cd59d59f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(`Verify status code is ${pm.environment.get(\"statusCode\")}`, function () {",
                      "    pm.response.to.have.status(pm.environment.get(\"statusCode\"));",
                      "})"
                    ],
                    "_lastExecutionId": "1c1d3659-a7b4-4ca0-aded-886c8a018038"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "63933eec-e1bb-4171-b5a8-33bbd8b74577",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('deleteUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "65ee405c-5319-4c4b-a7f2-b1123fe410d8"
                  }
                }
              ]
            },
            {
              "id": "3e4376c6-6a02-4839-aba5-7d8d3be513ea",
              "name": "Get User",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "users",
                    "{{userId}}"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1caf4a30-4e56-4693-a996-fd1bb2cc9f0a",
                    "type": "text/javascript",
                    "exec": [
                      "let statusCode = pm.environment.get(\"statusCode\");",
                      "",
                      "pm.test(`Verify status code is ${statusCode}`, function () {",
                      "    pm.response.to.have.status(statusCode);",
                      "})"
                    ],
                    "_lastExecutionId": "9ed76e2f-7ba1-40e8-8599-cc5c1115511e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdf6f84c-01af-45c1-946c-24e60f365276",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"statusCode\", pm.environment.get('getUserStatusCode'),);"
                    ],
                    "_lastExecutionId": "24adb4da-2621-4eed-82fd-bacc92919161"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "33c3b133-ee29-4363-bd8a-8e5d5b0f156f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "e5588e25-78ee-4ba5-bc9e-df11a1ffd6a9"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a74aebf9-008d-4b22-bf2c-9710c7b332ab",
                "type": "text/javascript",
                "exec": [
                  "postman.setNextRequest(getNextRequest());",
                  "",
                  "function getNextRequest() {",
                  "    let requests;",
                  "    let dataset;",
                  "    let nextDataset;",
                  "    let nextRequest;",
                  "",
                  "    if(Array.isArray(pm.globals.get(\"remainingDataset\")) === true ){",
                  "        dataset = pm.globals.get(\"remainingDataset\");",
                  "    } else {",
                  "        dataset = pm.iterationData.get(\"dataset\");",
                  "        if (dataset === undefined)",
                  "            pm.globals.set(\"remainingDataset\", []);",
                  "    }",
                  "",
                  "    let remainingRequests = pm.globals.get(\"remainingRequests\");",
                  "    if(Array.isArray(remainingRequests) === true ){",
                  "        requests = pm.globals.get(\"remainingRequests\");",
                  "    } else {",
                  "        requests = pm.iterationData.get(\"requests\");    ",
                  "    }",
                  "",
                  "    if(dataset && dataset.length > 0 && (remainingRequests === undefined || remainingRequests.length ===0)) {",
                  "        nextDataset = dataset.shift();",
                  "        pm.globals.set(\"remainingDataset\", dataset);",
                  "        for (const [key, value] of Object.entries(nextDataset)) {",
                  "            pm.environment.set(key, value);",
                  "        }",
                  "        requests = pm.iterationData.get(\"requests\");",
                  "    }",
                  "",
                  "    nextRequest = requests.shift();",
                  "    pm.globals.set(\"remainingRequests\", requests);",
                  "",
                  "    if(nextRequest === undefined && nextDataset === undefined){",
                  "        pm.globals.clear(\"remainingRequests\");",
                  "        pm.globals.clear(\"remainingDataset\");",
                  "        return null;",
                  "    }",
                  "",
                  "    return nextRequest;",
                  "}"
                ],
                "_lastExecutionId": "e4d8d4ed-3cfa-4d10-a5a5-caa64845d5c9"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "5718e244-6440-47c6-9cd8-cfc70196531b",
            "name": "API Testing",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "b4730d90-7b26-4c7b-90c5-9b13984f1045",
          "length": 5,
          "cycles": 6,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "e16beadb-e5f0-455d-a858-72d289cc35e3",
          "scriptId": "1e154e16-9f60-4f55-8ac0-b9c4cd59d59f",
          "execution": "a6a8aea6-39f4-43a0-b209-d690d0d31c48"
        }
      }
    ],
    "error": null
  }
}